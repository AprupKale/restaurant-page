(()=>{"use strict";var e={426:(e,n,t)=>{t.d(n,{Z:()=>h});var r=t(537),o=t.n(r),a=t(645),i=t.n(a),c=t(667),s=t.n(c),d=new URL(t(648),t.b),l=new URL(t(139),t.b),u=i()(o()),p=s()(d),A=s()(l);u.push([e.id,`@font-face {\n    font-family: 'Barlow';\n    src: url(${p}) format('truetype');\n}\n\n* {\n    margin: 0;\n    padding: 0;\n    font-family: 'Barlow';\n    overflow: auto;\n}\n\n*::-webkit-scrollbar {\n    display: none;\n}\n\nbody {\n    width: 100vw;\n    height: 100vh;\n    background-image: url(${A});\n    background-size: cover;\n    background-repeat: no-repeat;\n}\n\n#content {\n    width: 60%;\n    margin: 5vh auto;\n    background-color: lightgoldenrodyellow;\n    color: darkslategrey;\n    border: lightslategray 2px solid;\n    border-radius: 16px;\n}\n\n#content h1 {\n    font-size: calc((3vw + 5vh) / 2);\n    text-align: center;\n    margin: 16px auto;\n    width: 80%;\n}\n\n#content h2 {\n    font-size: calc((3vw + 5vh) / 3);\n    text-align: center;\n    margin: 16px auto;\n    width: 80%;\n}\n\n#content h4 {\n    font-size: calc(calc(3vw + 5vh) / 4);\n    text-align: center;\n    margin: 16px auto;\n    width: 80%;\n}\n\n#content p {\n    font-size: calc(calc(3vw + 5vh) / 6);\n    text-align: center;\n    margin: 16px auto;\n    width: 80%;\n}\n\n#navigation-bar {\n    position: sticky;\n    top: 0px;\n    width: 60%;\n    height: 10vh;\n    margin: auto;\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    align-items: stretch;\n}\n\n#navigation-bar>button {\n    width: calc(100% / 3);\n    background-color: lightgoldenrodyellow;\n    font-size: calc(calc(3vw + 5vh) / 3);\n    border: lightslategray 2px solid;\n    border-radius: 16px;\n    border-top-left-radius: 0;\n    border-top-right-radius: 0;\n}\n\n#navigation-bar>button.selected {\n    background-color: slategray;\n}\n\ndiv.dish {\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n}\n\ndiv.left-column {\n    width: 70%;\n}\n\ndiv.left-column>h4#name {\n    text-align: left;\n    margin: 8px 16px;\n}\n\ndiv.left-column>p#description {\n    text-align: left;\n    margin: 8px 16px;\n}\n\ndiv.right-column {\n    width: 30%;\n    align-self: center;\n}`,"",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,qBAAqB;IACrB,+DAAqD;AACzD;;AAEA;IACI,SAAS;IACT,UAAU;IACV,qBAAqB;IACrB,cAAc;AAClB;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI,YAAY;IACZ,aAAa;IACb,yDAAsD;IACtD,sBAAsB;IACtB,4BAA4B;AAChC;;AAEA;IACI,UAAU;IACV,gBAAgB;IAChB,sCAAsC;IACtC,oBAAoB;IACpB,gCAAgC;IAChC,mBAAmB;AACvB;;AAEA;IACI,gCAAgC;IAChC,kBAAkB;IAClB,iBAAiB;IACjB,UAAU;AACd;;AAEA;IACI,gCAAgC;IAChC,kBAAkB;IAClB,iBAAiB;IACjB,UAAU;AACd;;AAEA;IACI,oCAAoC;IACpC,kBAAkB;IAClB,iBAAiB;IACjB,UAAU;AACd;;AAEA;IACI,oCAAoC;IACpC,kBAAkB;IAClB,iBAAiB;IACjB,UAAU;AACd;;AAEA;IACI,gBAAgB;IAChB,QAAQ;IACR,UAAU;IACV,YAAY;IACZ,YAAY;IACZ,aAAa;IACb,mBAAmB;IACnB,uBAAuB;IACvB,oBAAoB;AACxB;;AAEA;IACI,qBAAqB;IACrB,sCAAsC;IACtC,oCAAoC;IACpC,gCAAgC;IAChC,mBAAmB;IACnB,yBAAyB;IACzB,0BAA0B;AAC9B;;AAEA;IACI,2BAA2B;AAC/B;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,8BAA8B;AAClC;;AAEA;IACI,UAAU;AACd;;AAEA;IACI,gBAAgB;IAChB,gBAAgB;AACpB;;AAEA;IACI,gBAAgB;IAChB,gBAAgB;AACpB;;AAEA;IACI,UAAU;IACV,kBAAkB;AACtB",sourcesContent:["@font-face {\r\n    font-family: 'Barlow';\r\n    src: url(./fonts/Barlow-Light.ttf) format('truetype');\r\n}\r\n\r\n* {\r\n    margin: 0;\r\n    padding: 0;\r\n    font-family: 'Barlow';\r\n    overflow: auto;\r\n}\r\n\r\n*::-webkit-scrollbar {\r\n    display: none;\r\n}\r\n\r\nbody {\r\n    width: 100vw;\r\n    height: 100vh;\r\n    background-image: url(./images/restaurant-image-4.png);\r\n    background-size: cover;\r\n    background-repeat: no-repeat;\r\n}\r\n\r\n#content {\r\n    width: 60%;\r\n    margin: 5vh auto;\r\n    background-color: lightgoldenrodyellow;\r\n    color: darkslategrey;\r\n    border: lightslategray 2px solid;\r\n    border-radius: 16px;\r\n}\r\n\r\n#content h1 {\r\n    font-size: calc((3vw + 5vh) / 2);\r\n    text-align: center;\r\n    margin: 16px auto;\r\n    width: 80%;\r\n}\r\n\r\n#content h2 {\r\n    font-size: calc((3vw + 5vh) / 3);\r\n    text-align: center;\r\n    margin: 16px auto;\r\n    width: 80%;\r\n}\r\n\r\n#content h4 {\r\n    font-size: calc(calc(3vw + 5vh) / 4);\r\n    text-align: center;\r\n    margin: 16px auto;\r\n    width: 80%;\r\n}\r\n\r\n#content p {\r\n    font-size: calc(calc(3vw + 5vh) / 6);\r\n    text-align: center;\r\n    margin: 16px auto;\r\n    width: 80%;\r\n}\r\n\r\n#navigation-bar {\r\n    position: sticky;\r\n    top: 0px;\r\n    width: 60%;\r\n    height: 10vh;\r\n    margin: auto;\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: center;\r\n    align-items: stretch;\r\n}\r\n\r\n#navigation-bar>button {\r\n    width: calc(100% / 3);\r\n    background-color: lightgoldenrodyellow;\r\n    font-size: calc(calc(3vw + 5vh) / 3);\r\n    border: lightslategray 2px solid;\r\n    border-radius: 16px;\r\n    border-top-left-radius: 0;\r\n    border-top-right-radius: 0;\r\n}\r\n\r\n#navigation-bar>button.selected {\r\n    background-color: slategray;\r\n}\r\n\r\ndiv.dish {\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: space-between;\r\n}\r\n\r\ndiv.left-column {\r\n    width: 70%;\r\n}\r\n\r\ndiv.left-column>h4#name {\r\n    text-align: left;\r\n    margin: 8px 16px;\r\n}\r\n\r\ndiv.left-column>p#description {\r\n    text-align: left;\r\n    margin: 8px 16px;\r\n}\r\n\r\ndiv.right-column {\r\n    width: 30%;\r\n    align-self: center;\r\n}"],sourceRoot:""}]);const h=u},645:e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",r=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),r&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),r&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,r,o,a){"string"==typeof e&&(e=[[null,e,void 0]]);var i={};if(r)for(var c=0;c<this.length;c++){var s=this[c][0];null!=s&&(i[s]=!0)}for(var d=0;d<e.length;d++){var l=[].concat(e[d]);r&&i[l[0]]||(void 0!==a&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=a),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),o&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=o):l[4]="".concat(o)),n.push(l))}},n}},667:e=>{e.exports=function(e,n){return n||(n={}),e?(e=String(e.__esModule?e.default:e),/^['"].*['"]$/.test(e)&&(e=e.slice(1,-1)),n.hash&&(e+=n.hash),/["'() \t\n]|(%20)/.test(e)||n.needQuotes?'"'.concat(e.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):e):e}},537:e=>{e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),a="/*# ".concat(o," */");return[n].concat([a]).join("\n")}return[n].join("\n")}},379:e=>{var n=[];function t(e){for(var t=-1,r=0;r<n.length;r++)if(n[r].identifier===e){t=r;break}return t}function r(e,r){for(var a={},i=[],c=0;c<e.length;c++){var s=e[c],d=r.base?s[0]+r.base:s[0],l=a[d]||0,u="".concat(d," ").concat(l);a[d]=l+1;var p=t(u),A={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==p)n[p].references++,n[p].updater(A);else{var h=o(A,r);r.byIndex=c,n.splice(c,0,{identifier:u,updater:h,references:1})}i.push(u)}return i}function o(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,o){var a=r(e=e||[],o=o||{});return function(e){e=e||[];for(var i=0;i<a.length;i++){var c=t(a[i]);n[c].references--}for(var s=r(e,o),d=0;d<a.length;d++){var l=t(a[d]);0===n[l].references&&(n[l].updater(),n.splice(l,1))}a=s}}},569:e=>{var n={};e.exports=function(e,t){var r=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:e=>{e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},565:(e,n,t)=>{e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},795:e=>{e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,o&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),n.styleTagTransform(r,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},589:e=>{e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}},648:(e,n,t)=>{e.exports=t.p+"19f244ecb11218b9a7de.ttf"},139:(e,n,t)=>{e.exports=t.p+"1f1279cdb2e2a4d9404b.png"}},n={};function t(r){var o=n[r];if(void 0!==o)return o.exports;var a=n[r]={id:r,exports:{}};return e[r](a,a.exports,t),a.exports}t.m=e,t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var r in n)t.o(n,r)&&!t.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:n[r]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),(()=>{var e;t.g.importScripts&&(e=t.g.location+"");var n=t.g.document;if(!e&&n&&(n.currentScript&&(e=n.currentScript.src),!e)){var r=n.getElementsByTagName("script");if(r.length)for(var o=r.length-1;o>-1&&!e;)e=r[o--].src}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=e})(),t.b=document.baseURI||self.location.href,t.nc=void 0,(()=>{var e=t(379),n=t.n(e),r=t(795),o=t.n(r),a=t(569),i=t.n(a),c=t(565),s=t.n(c),d=t(216),l=t.n(d),u=t(589),p=t.n(u),A=t(426),h={};function m(e,n,t){return{name:e,description:n,price:t}}h.styleTagTransform=p(),h.setAttributes=s(),h.insert=i().bind(null,"head"),h.domAPI=o(),h.insertStyleElement=l(),n()(A.Z,h),A.Z&&A.Z.locals&&A.Z.locals;const f=[m("Truffle-infused Mushroom Bruschetta","Sautéed wild mushrooms with a hint of truffle, served on toasted artisan bread","1499"),m("Lobster Bisque","Creamy soup enriched with succulent chunks of lobster, finished with a drizzle of herb-infused oil","1299"),m("Smoked Salmon Crostini","Thinly sliced smoked salmon on toasted baguette, topped with dill cream cheese and capers","999")],g=[m("Filet Mignon with Port Wine Reduction","Tender, grilled filet mignon served with a rich port wine reduction, accompanied by roasted fingerling potatoes and sautéed seasonal vegetables","1799"),m("Pistachio-Crusted Chilean Sea Bass","Oven-baked Chilean sea bass coated with a crunchy pistachio crust, served with lemon beurre blanc, wild rice pilaf, and grilled asparagus","1599"),m("Wild Mushroom Risotto","Creamy Arborio rice simmered with a medley of wild mushrooms, Parmesan cheese, and fresh herbs, finished with a drizzle of truffle oil","1499"),m("Moroccan Spiced Lamb Chop","Grilled lamb chops marinated in aromatic Moroccan spices, served with mint yogurt sauce, couscous, and grilled vegetables","1999")],C=[m("Decadent Chocolate Soufflé","A rich and velvety chocolate soufflé served with a scoop of homemade vanilla bean ice cream","799"),m("Lemon Blueberry Tart","Buttery tart shell filled with tangy lemon custard and topped with fresh blueberries and a dusting of powdered sugar","499"),m("Crème Brûlée Trio","A trio of classic vanilla bean, chocolate, and lavender-infused crème brûlée, accompanied by almond biscotti","599")];function v(){document.body.innerHTML="";const e=document.createElement("div");e.id="navigation-bar";const n=document.createElement("button");n.id="home",n.textContent="Home";const t=document.createElement("button");t.id="menu",t.textContent="Menu";const r=document.createElement("button");return r.id="contact",r.textContent="Contact Us",n.addEventListener("click",b),t.addEventListener("click",y),r.addEventListener("click",B),e.appendChild(n),e.appendChild(t),e.appendChild(r),e}function b(){document.body.appendChild(v()),document.querySelector("#home").classList="selected",document.body.appendChild(function(){const e=document.createElement("div");e.id="content";const n=document.createElement("h1");n.innerHTML="Epicurean Escape";const t=document.createElement("h4");t.innerHTML="Embark on an Epicurean Escape: Indulge in Culinary Bliss at Our Exquisite Restaurant";const r=document.createElement("p");r.innerHTML="Welcome to Epicurean Escape, where gastronomy takes center stage and culinary dreams come true. \n        Nestled in the heart of Mumbai, our restaurant is a haven for food enthusiasts seeking an \n        extraordinary dining experience.";const o=document.createElement("p");o.innerHTML="Prepare to be transported on a journey of flavors, textures, and aromas as our talented chefs craft \n        masterpieces that tantalize the taste buds. From innovative fusion creations to timeless classics \n        prepared with meticulous attention to detail, every dish is a work of art.";const a=document.createElement("p");a.innerHTML="Step into our elegant and inviting space, where the ambiance exudes warmth and sophistication. \n        The soft lighting, tasteful decor, and comfortable seating set the stage for a memorable evening of \n        indulgence. Whether it's an intimate dinner for two, a gathering with friends, or a celebratory \n        event, Epicurean Escape provides the perfect setting for any occasion.";const i=document.createElement("p");i.innerHTML="At Epicurean Escape, we source only the finest, freshest ingredients, ensuring that every bite \n        bursts with flavor. Our menu showcases a harmonious blend of global cuisines, combining traditional \n        techniques with modern flair. From succulent seafood to sizzling steaks, vegetarian delights to \n        decadent desserts, our diverse selection caters to every palate and dietary preference.";const c=document.createElement("p");c.innerHTML="Whether you're a seasoned food aficionado or an adventurous epicurean, Epicurean Escape promises an \n        unforgettable culinary journey. Join us and surrender to the allure of exquisite flavors, \n        impeccable hospitality, and a dining experience that transcends the ordinary.";const s=document.createElement("h4");return s.innerHTML="Indulge your senses and escape to a world of gastronomic bliss. Book your table at Epicurean \n        Escape today and embark on a culinary adventure like no other.",e.appendChild(n),e.appendChild(t),e.appendChild(r),e.appendChild(o),e.appendChild(a),e.appendChild(i),e.appendChild(c),e.appendChild(s),e}())}function y(){document.body.appendChild(v()),document.querySelector("#menu").classList="selected",document.body.appendChild(function(){const e=document.createElement("div");e.id="content";const n=document.createElement("div");n.id="appetizers";const t=document.createElement("h2");t.innerHTML="Appetizers",n.appendChild(t);for(let e=0;e<f.length;e++){let t=f[e];const r=document.createElement("h4");r.textContent=t.name,r.id="name";const o=document.createElement("p");o.textContent=t.description,o.id="description";const a=document.createElement("div");a.classList="left-column",a.appendChild(r),a.appendChild(o);const i=document.createElement("h4");i.textContent=t.price;const c=document.createElement("div");c.classList="right-column",c.appendChild(i);const s=document.createElement("div");s.appendChild(a),s.appendChild(c),s.classList="dish",n.appendChild(s)}const r=document.createElement("div");r.id="appetizers";const o=document.createElement("h2");o.innerHTML="Main Course",r.appendChild(o);for(let e=0;e<g.length;e++){let n=g[e];const t=document.createElement("h4");t.textContent=n.name,t.id="name";const o=document.createElement("p");o.textContent=n.description,o.id="description";const a=document.createElement("div");a.classList="left-column",a.appendChild(t),a.appendChild(o);const i=document.createElement("h4");i.textContent=n.price;const c=document.createElement("div");c.classList="right-column",c.appendChild(i);const s=document.createElement("div");s.appendChild(a),s.appendChild(c),s.classList="dish",r.appendChild(s)}const a=document.createElement("div");a.id="deserts";const i=document.createElement("h2");i.innerHTML="Deserts",a.appendChild(i);for(let e=0;e<C.length;e++){let n=C[e];const t=document.createElement("h4");t.textContent=n.name,t.id="name";const r=document.createElement("p");r.textContent=n.description,r.id="description";const o=document.createElement("div");o.classList="left-column",o.appendChild(t),o.appendChild(r);const i=document.createElement("h4");i.textContent=n.price;const c=document.createElement("div");c.classList="right-column",c.appendChild(i);const s=document.createElement("div");s.appendChild(o),s.appendChild(c),s.classList="dish",a.appendChild(s)}return e.appendChild(n),e.appendChild(r),e.appendChild(a),e}())}function B(){document.body.appendChild(v()),document.querySelector("#contact").classList="selected",document.body.appendChild(function(){const e=document.createElement("div");return e.id="content",e}())}b()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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LGNBQWMsT0FLdkMsT0FKQS9FLEVBQVFSLEdBQUssVUFJTlEsQ0FDWCxDRjBDOEIsR0FDOUIsQ0FFQXFKLEciLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yZXN0YXVyYW50LXBhZ2UvLi9zcmMvc3R5bGUuY3NzIiwid2VicGFjazovL3Jlc3RhdXJhbnQtcGFnZS8uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanMiLCJ3ZWJwYWNrOi8vcmVzdGF1cmFudC1wYWdlLy4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2dldFVybC5qcyIsIndlYnBhY2s6Ly9yZXN0YXVyYW50LXBhZ2UvLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qcyIsIndlYnBhY2s6Ly9yZXN0YXVyYW50LXBhZ2UvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanMiLCJ3ZWJwYWNrOi8vcmVzdGF1cmFudC1wYWdlLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qcyIsIndlYnBhY2s6Ly9yZXN0YXVyYW50LXBhZ2UvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRTdHlsZUVsZW1lbnQuanMiLCJ3ZWJwYWNrOi8vcmVzdGF1cmFudC1wYWdlLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzLmpzIiwid2VicGFjazovL3Jlc3RhdXJhbnQtcGFnZS8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzIiwid2VicGFjazovL3Jlc3RhdXJhbnQtcGFnZS8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlVGFnVHJhbnNmb3JtLmpzIiwid2VicGFjazovL3Jlc3RhdXJhbnQtcGFnZS93ZWJwYWNrL2Jvb3RzdHJhcCIsIndlYnBhY2s6Ly9yZXN0YXVyYW50LXBhZ2Uvd2VicGFjay9ydW50aW1lL2NvbXBhdCBnZXQgZGVmYXVsdCBleHBvcnQiLCJ3ZWJwYWNrOi8vcmVzdGF1cmFudC1wYWdlL3dlYnBhY2svcnVudGltZS9kZWZpbmUgcHJvcGVydHkgZ2V0dGVycyIsIndlYnBhY2s6Ly9yZXN0YXVyYW50LXBhZ2Uvd2VicGFjay9ydW50aW1lL2dsb2JhbCIsIndlYnBhY2s6Ly9yZXN0YXVyYW50LXBhZ2Uvd2VicGFjay9ydW50aW1lL2hhc093blByb3BlcnR5IHNob3J0aGFuZCIsIndlYnBhY2s6Ly9yZXN0YXVyYW50LXBhZ2Uvd2VicGFjay9ydW50aW1lL3B1YmxpY1BhdGgiLCJ3ZWJwYWNrOi8vcmVzdGF1cmFudC1wYWdlL3dlYnBhY2svcnVudGltZS9qc29ucCBjaHVuayBsb2FkaW5nIiwid2VicGFjazovL3Jlc3RhdXJhbnQtcGFnZS93ZWJwYWNrL3J1bnRpbWUvbm9uY2UiLCJ3ZWJwYWNrOi8vcmVzdGF1cmFudC1wYWdlLy4vc3JjL3N0eWxlLmNzcz83MTYzIiwid2VicGFjazovL3Jlc3RhdXJhbnQtcGFnZS8uL3NyYy9tZW51LmpzIiwid2VicGFjazovL3Jlc3RhdXJhbnQtcGFnZS8uL3NyYy9pbmRleC5qcyIsIndlYnBhY2s6Ly9yZXN0YXVyYW50LXBhZ2UvLi9zcmMvaG9tZS5qcyIsIndlYnBhY2s6Ly9yZXN0YXVyYW50LXBhZ2UvLi9zcmMvY29udGFjdC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBJbXBvcnRzXG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyBmcm9tIFwiLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanNcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gZnJvbSBcIi4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0dFVF9VUkxfSU1QT1JUX19fIGZyb20gXCIuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvZ2V0VXJsLmpzXCI7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzBfX18gPSBuZXcgVVJMKFwiLi9mb250cy9CYXJsb3ctTGlnaHQudHRmXCIsIGltcG9ydC5tZXRhLnVybCk7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzFfX18gPSBuZXcgVVJMKFwiLi9pbWFnZXMvcmVzdGF1cmFudC1pbWFnZS00LnBuZ1wiLCBpbXBvcnQubWV0YS51cmwpO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18pO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzBfX18gPSBfX19DU1NfTE9BREVSX0dFVF9VUkxfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8wX19fKTtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8xX19fID0gX19fQ1NTX0xPQURFUl9HRVRfVVJMX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMV9fXyk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgYEBmb250LWZhY2Uge1xyXG4gICAgZm9udC1mYW1pbHk6ICdCYXJsb3cnO1xyXG4gICAgc3JjOiB1cmwoJHtfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8wX19ffSkgZm9ybWF0KCd0cnVldHlwZScpO1xyXG59XHJcblxyXG4qIHtcclxuICAgIG1hcmdpbjogMDtcclxuICAgIHBhZGRpbmc6IDA7XHJcbiAgICBmb250LWZhbWlseTogJ0Jhcmxvdyc7XHJcbiAgICBvdmVyZmxvdzogYXV0bztcclxufVxyXG5cclxuKjo6LXdlYmtpdC1zY3JvbGxiYXIge1xyXG4gICAgZGlzcGxheTogbm9uZTtcclxufVxyXG5cclxuYm9keSB7XHJcbiAgICB3aWR0aDogMTAwdnc7XHJcbiAgICBoZWlnaHQ6IDEwMHZoO1xyXG4gICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKCR7X19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMV9fX30pO1xyXG4gICAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcclxuICAgIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XHJcbn1cclxuXHJcbiNjb250ZW50IHtcclxuICAgIHdpZHRoOiA2MCU7XHJcbiAgICBtYXJnaW46IDV2aCBhdXRvO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogbGlnaHRnb2xkZW5yb2R5ZWxsb3c7XHJcbiAgICBjb2xvcjogZGFya3NsYXRlZ3JleTtcclxuICAgIGJvcmRlcjogbGlnaHRzbGF0ZWdyYXkgMnB4IHNvbGlkO1xyXG4gICAgYm9yZGVyLXJhZGl1czogMTZweDtcclxufVxyXG5cclxuI2NvbnRlbnQgaDEge1xyXG4gICAgZm9udC1zaXplOiBjYWxjKCgzdncgKyA1dmgpIC8gMik7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICBtYXJnaW46IDE2cHggYXV0bztcclxuICAgIHdpZHRoOiA4MCU7XHJcbn1cclxuXHJcbiNjb250ZW50IGgyIHtcclxuICAgIGZvbnQtc2l6ZTogY2FsYygoM3Z3ICsgNXZoKSAvIDMpO1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgbWFyZ2luOiAxNnB4IGF1dG87XHJcbiAgICB3aWR0aDogODAlO1xyXG59XHJcblxyXG4jY29udGVudCBoNCB7XHJcbiAgICBmb250LXNpemU6IGNhbGMoY2FsYygzdncgKyA1dmgpIC8gNCk7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICBtYXJnaW46IDE2cHggYXV0bztcclxuICAgIHdpZHRoOiA4MCU7XHJcbn1cclxuXHJcbiNjb250ZW50IHAge1xyXG4gICAgZm9udC1zaXplOiBjYWxjKGNhbGMoM3Z3ICsgNXZoKSAvIDYpO1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgbWFyZ2luOiAxNnB4IGF1dG87XHJcbiAgICB3aWR0aDogODAlO1xyXG59XHJcblxyXG4jbmF2aWdhdGlvbi1iYXIge1xyXG4gICAgcG9zaXRpb246IHN0aWNreTtcclxuICAgIHRvcDogMHB4O1xyXG4gICAgd2lkdGg6IDYwJTtcclxuICAgIGhlaWdodDogMTB2aDtcclxuICAgIG1hcmdpbjogYXV0bztcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xyXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICBhbGlnbi1pdGVtczogc3RyZXRjaDtcclxufVxyXG5cclxuI25hdmlnYXRpb24tYmFyPmJ1dHRvbiB7XHJcbiAgICB3aWR0aDogY2FsYygxMDAlIC8gMyk7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBsaWdodGdvbGRlbnJvZHllbGxvdztcclxuICAgIGZvbnQtc2l6ZTogY2FsYyhjYWxjKDN2dyArIDV2aCkgLyAzKTtcclxuICAgIGJvcmRlcjogbGlnaHRzbGF0ZWdyYXkgMnB4IHNvbGlkO1xyXG4gICAgYm9yZGVyLXJhZGl1czogMTZweDtcclxuICAgIGJvcmRlci10b3AtbGVmdC1yYWRpdXM6IDA7XHJcbiAgICBib3JkZXItdG9wLXJpZ2h0LXJhZGl1czogMDtcclxufVxyXG5cclxuI25hdmlnYXRpb24tYmFyPmJ1dHRvbi5zZWxlY3RlZCB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBzbGF0ZWdyYXk7XHJcbn1cclxuXHJcbmRpdi5kaXNoIHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xyXG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xyXG59XHJcblxyXG5kaXYubGVmdC1jb2x1bW4ge1xyXG4gICAgd2lkdGg6IDcwJTtcclxufVxyXG5cclxuZGl2LmxlZnQtY29sdW1uPmg0I25hbWUge1xyXG4gICAgdGV4dC1hbGlnbjogbGVmdDtcclxuICAgIG1hcmdpbjogOHB4IDE2cHg7XHJcbn1cclxuXHJcbmRpdi5sZWZ0LWNvbHVtbj5wI2Rlc2NyaXB0aW9uIHtcclxuICAgIHRleHQtYWxpZ246IGxlZnQ7XHJcbiAgICBtYXJnaW46IDhweCAxNnB4O1xyXG59XHJcblxyXG5kaXYucmlnaHQtY29sdW1uIHtcclxuICAgIHdpZHRoOiAzMCU7XHJcbiAgICBhbGlnbi1zZWxmOiBjZW50ZXI7XHJcbn1gLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIndlYnBhY2s6Ly8uL3NyYy9zdHlsZS5jc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBQUE7SUFDSSxxQkFBcUI7SUFDckIsK0RBQXFEO0FBQ3pEOztBQUVBO0lBQ0ksU0FBUztJQUNULFVBQVU7SUFDVixxQkFBcUI7SUFDckIsY0FBYztBQUNsQjs7QUFFQTtJQUNJLGFBQWE7QUFDakI7O0FBRUE7SUFDSSxZQUFZO0lBQ1osYUFBYTtJQUNiLHlEQUFzRDtJQUN0RCxzQkFBc0I7SUFDdEIsNEJBQTRCO0FBQ2hDOztBQUVBO0lBQ0ksVUFBVTtJQUNWLGdCQUFnQjtJQUNoQixzQ0FBc0M7SUFDdEMsb0JBQW9CO0lBQ3BCLGdDQUFnQztJQUNoQyxtQkFBbUI7QUFDdkI7O0FBRUE7SUFDSSxnQ0FBZ0M7SUFDaEMsa0JBQWtCO0lBQ2xCLGlCQUFpQjtJQUNqQixVQUFVO0FBQ2Q7O0FBRUE7SUFDSSxnQ0FBZ0M7SUFDaEMsa0JBQWtCO0lBQ2xCLGlCQUFpQjtJQUNqQixVQUFVO0FBQ2Q7O0FBRUE7SUFDSSxvQ0FBb0M7SUFDcEMsa0JBQWtCO0lBQ2xCLGlCQUFpQjtJQUNqQixVQUFVO0FBQ2Q7O0FBRUE7SUFDSSxvQ0FBb0M7SUFDcEMsa0JBQWtCO0lBQ2xCLGlCQUFpQjtJQUNqQixVQUFVO0FBQ2Q7O0FBRUE7SUFDSSxnQkFBZ0I7SUFDaEIsUUFBUTtJQUNSLFVBQVU7SUFDVixZQUFZO0lBQ1osWUFBWTtJQUNaLGFBQWE7SUFDYixtQkFBbUI7SUFDbkIsdUJBQXVCO0lBQ3ZCLG9CQUFvQjtBQUN4Qjs7QUFFQTtJQUNJLHFCQUFxQjtJQUNyQixzQ0FBc0M7SUFDdEMsb0NBQW9DO0lBQ3BDLGdDQUFnQztJQUNoQyxtQkFBbUI7SUFDbkIseUJBQXlCO0lBQ3pCLDBCQUEwQjtBQUM5Qjs7QUFFQTtJQUNJLDJCQUEyQjtBQUMvQjs7QUFFQTtJQUNJLGFBQWE7SUFDYixtQkFBbUI7SUFDbkIsOEJBQThCO0FBQ2xDOztBQUVBO0lBQ0ksVUFBVTtBQUNkOztBQUVBO0lBQ0ksZ0JBQWdCO0lBQ2hCLGdCQUFnQjtBQUNwQjs7QUFFQTtJQUNJLGdCQUFnQjtJQUNoQixnQkFBZ0I7QUFDcEI7O0FBRUE7SUFDSSxVQUFVO0lBQ1Ysa0JBQWtCO0FBQ3RCXCIsXCJzb3VyY2VzQ29udGVudFwiOltcIkBmb250LWZhY2Uge1xcclxcbiAgICBmb250LWZhbWlseTogJ0Jhcmxvdyc7XFxyXFxuICAgIHNyYzogdXJsKC4vZm9udHMvQmFybG93LUxpZ2h0LnR0ZikgZm9ybWF0KCd0cnVldHlwZScpO1xcclxcbn1cXHJcXG5cXHJcXG4qIHtcXHJcXG4gICAgbWFyZ2luOiAwO1xcclxcbiAgICBwYWRkaW5nOiAwO1xcclxcbiAgICBmb250LWZhbWlseTogJ0Jhcmxvdyc7XFxyXFxuICAgIG92ZXJmbG93OiBhdXRvO1xcclxcbn1cXHJcXG5cXHJcXG4qOjotd2Via2l0LXNjcm9sbGJhciB7XFxyXFxuICAgIGRpc3BsYXk6IG5vbmU7XFxyXFxufVxcclxcblxcclxcbmJvZHkge1xcclxcbiAgICB3aWR0aDogMTAwdnc7XFxyXFxuICAgIGhlaWdodDogMTAwdmg7XFxyXFxuICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybCguL2ltYWdlcy9yZXN0YXVyYW50LWltYWdlLTQucG5nKTtcXHJcXG4gICAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcXHJcXG4gICAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcXHJcXG59XFxyXFxuXFxyXFxuI2NvbnRlbnQge1xcclxcbiAgICB3aWR0aDogNjAlO1xcclxcbiAgICBtYXJnaW46IDV2aCBhdXRvO1xcclxcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBsaWdodGdvbGRlbnJvZHllbGxvdztcXHJcXG4gICAgY29sb3I6IGRhcmtzbGF0ZWdyZXk7XFxyXFxuICAgIGJvcmRlcjogbGlnaHRzbGF0ZWdyYXkgMnB4IHNvbGlkO1xcclxcbiAgICBib3JkZXItcmFkaXVzOiAxNnB4O1xcclxcbn1cXHJcXG5cXHJcXG4jY29udGVudCBoMSB7XFxyXFxuICAgIGZvbnQtc2l6ZTogY2FsYygoM3Z3ICsgNXZoKSAvIDIpO1xcclxcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XFxyXFxuICAgIG1hcmdpbjogMTZweCBhdXRvO1xcclxcbiAgICB3aWR0aDogODAlO1xcclxcbn1cXHJcXG5cXHJcXG4jY29udGVudCBoMiB7XFxyXFxuICAgIGZvbnQtc2l6ZTogY2FsYygoM3Z3ICsgNXZoKSAvIDMpO1xcclxcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XFxyXFxuICAgIG1hcmdpbjogMTZweCBhdXRvO1xcclxcbiAgICB3aWR0aDogODAlO1xcclxcbn1cXHJcXG5cXHJcXG4jY29udGVudCBoNCB7XFxyXFxuICAgIGZvbnQtc2l6ZTogY2FsYyhjYWxjKDN2dyArIDV2aCkgLyA0KTtcXHJcXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xcclxcbiAgICBtYXJnaW46IDE2cHggYXV0bztcXHJcXG4gICAgd2lkdGg6IDgwJTtcXHJcXG59XFxyXFxuXFxyXFxuI2NvbnRlbnQgcCB7XFxyXFxuICAgIGZvbnQtc2l6ZTogY2FsYyhjYWxjKDN2dyArIDV2aCkgLyA2KTtcXHJcXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xcclxcbiAgICBtYXJnaW46IDE2cHggYXV0bztcXHJcXG4gICAgd2lkdGg6IDgwJTtcXHJcXG59XFxyXFxuXFxyXFxuI25hdmlnYXRpb24tYmFyIHtcXHJcXG4gICAgcG9zaXRpb246IHN0aWNreTtcXHJcXG4gICAgdG9wOiAwcHg7XFxyXFxuICAgIHdpZHRoOiA2MCU7XFxyXFxuICAgIGhlaWdodDogMTB2aDtcXHJcXG4gICAgbWFyZ2luOiBhdXRvO1xcclxcbiAgICBkaXNwbGF5OiBmbGV4O1xcclxcbiAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xcclxcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXHJcXG4gICAgYWxpZ24taXRlbXM6IHN0cmV0Y2g7XFxyXFxufVxcclxcblxcclxcbiNuYXZpZ2F0aW9uLWJhcj5idXR0b24ge1xcclxcbiAgICB3aWR0aDogY2FsYygxMDAlIC8gMyk7XFxyXFxuICAgIGJhY2tncm91bmQtY29sb3I6IGxpZ2h0Z29sZGVucm9keWVsbG93O1xcclxcbiAgICBmb250LXNpemU6IGNhbGMoY2FsYygzdncgKyA1dmgpIC8gMyk7XFxyXFxuICAgIGJvcmRlcjogbGlnaHRzbGF0ZWdyYXkgMnB4IHNvbGlkO1xcclxcbiAgICBib3JkZXItcmFkaXVzOiAxNnB4O1xcclxcbiAgICBib3JkZXItdG9wLWxlZnQtcmFkaXVzOiAwO1xcclxcbiAgICBib3JkZXItdG9wLXJpZ2h0LXJhZGl1czogMDtcXHJcXG59XFxyXFxuXFxyXFxuI25hdmlnYXRpb24tYmFyPmJ1dHRvbi5zZWxlY3RlZCB7XFxyXFxuICAgIGJhY2tncm91bmQtY29sb3I6IHNsYXRlZ3JheTtcXHJcXG59XFxyXFxuXFxyXFxuZGl2LmRpc2gge1xcclxcbiAgICBkaXNwbGF5OiBmbGV4O1xcclxcbiAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xcclxcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XFxyXFxufVxcclxcblxcclxcbmRpdi5sZWZ0LWNvbHVtbiB7XFxyXFxuICAgIHdpZHRoOiA3MCU7XFxyXFxufVxcclxcblxcclxcbmRpdi5sZWZ0LWNvbHVtbj5oNCNuYW1lIHtcXHJcXG4gICAgdGV4dC1hbGlnbjogbGVmdDtcXHJcXG4gICAgbWFyZ2luOiA4cHggMTZweDtcXHJcXG59XFxyXFxuXFxyXFxuZGl2LmxlZnQtY29sdW1uPnAjZGVzY3JpcHRpb24ge1xcclxcbiAgICB0ZXh0LWFsaWduOiBsZWZ0O1xcclxcbiAgICBtYXJnaW46IDhweCAxNnB4O1xcclxcbn1cXHJcXG5cXHJcXG5kaXYucmlnaHQtY29sdW1uIHtcXHJcXG4gICAgd2lkdGg6IDMwJTtcXHJcXG4gICAgYWxpZ24tc2VsZjogY2VudGVyO1xcclxcbn1cIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcbi8vIEV4cG9ydHNcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIiwiXCJ1c2Ugc3RyaWN0XCI7XHJcblxyXG4vKlxyXG4gIE1JVCBMaWNlbnNlIGh0dHA6Ly93d3cub3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvbWl0LWxpY2Vuc2UucGhwXHJcbiAgQXV0aG9yIFRvYmlhcyBLb3BwZXJzIEBzb2tyYVxyXG4qL1xyXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKSB7XHJcbiAgdmFyIGxpc3QgPSBbXTtcclxuXHJcbiAgLy8gcmV0dXJuIHRoZSBsaXN0IG9mIG1vZHVsZXMgYXMgY3NzIHN0cmluZ1xyXG4gIGxpc3QudG9TdHJpbmcgPSBmdW5jdGlvbiB0b1N0cmluZygpIHtcclxuICAgIHJldHVybiB0aGlzLm1hcChmdW5jdGlvbiAoaXRlbSkge1xyXG4gICAgICB2YXIgY29udGVudCA9IFwiXCI7XHJcbiAgICAgIHZhciBuZWVkTGF5ZXIgPSB0eXBlb2YgaXRlbVs1XSAhPT0gXCJ1bmRlZmluZWRcIjtcclxuICAgICAgaWYgKGl0ZW1bNF0pIHtcclxuICAgICAgICBjb250ZW50ICs9IFwiQHN1cHBvcnRzIChcIi5jb25jYXQoaXRlbVs0XSwgXCIpIHtcIik7XHJcbiAgICAgIH1cclxuICAgICAgaWYgKGl0ZW1bMl0pIHtcclxuICAgICAgICBjb250ZW50ICs9IFwiQG1lZGlhIFwiLmNvbmNhdChpdGVtWzJdLCBcIiB7XCIpO1xyXG4gICAgICB9XHJcbiAgICAgIGlmIChuZWVkTGF5ZXIpIHtcclxuICAgICAgICBjb250ZW50ICs9IFwiQGxheWVyXCIuY29uY2F0KGl0ZW1bNV0ubGVuZ3RoID4gMCA/IFwiIFwiLmNvbmNhdChpdGVtWzVdKSA6IFwiXCIsIFwiIHtcIik7XHJcbiAgICAgIH1cclxuICAgICAgY29udGVudCArPSBjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKGl0ZW0pO1xyXG4gICAgICBpZiAobmVlZExheWVyKSB7XHJcbiAgICAgICAgY29udGVudCArPSBcIn1cIjtcclxuICAgICAgfVxyXG4gICAgICBpZiAoaXRlbVsyXSkge1xyXG4gICAgICAgIGNvbnRlbnQgKz0gXCJ9XCI7XHJcbiAgICAgIH1cclxuICAgICAgaWYgKGl0ZW1bNF0pIHtcclxuICAgICAgICBjb250ZW50ICs9IFwifVwiO1xyXG4gICAgICB9XHJcbiAgICAgIHJldHVybiBjb250ZW50O1xyXG4gICAgfSkuam9pbihcIlwiKTtcclxuICB9O1xyXG5cclxuICAvLyBpbXBvcnQgYSBsaXN0IG9mIG1vZHVsZXMgaW50byB0aGUgbGlzdFxyXG4gIGxpc3QuaSA9IGZ1bmN0aW9uIGkobW9kdWxlcywgbWVkaWEsIGRlZHVwZSwgc3VwcG9ydHMsIGxheWVyKSB7XHJcbiAgICBpZiAodHlwZW9mIG1vZHVsZXMgPT09IFwic3RyaW5nXCIpIHtcclxuICAgICAgbW9kdWxlcyA9IFtbbnVsbCwgbW9kdWxlcywgdW5kZWZpbmVkXV07XHJcbiAgICB9XHJcbiAgICB2YXIgYWxyZWFkeUltcG9ydGVkTW9kdWxlcyA9IHt9O1xyXG4gICAgaWYgKGRlZHVwZSkge1xyXG4gICAgICBmb3IgKHZhciBrID0gMDsgayA8IHRoaXMubGVuZ3RoOyBrKyspIHtcclxuICAgICAgICB2YXIgaWQgPSB0aGlzW2tdWzBdO1xyXG4gICAgICAgIGlmIChpZCAhPSBudWxsKSB7XHJcbiAgICAgICAgICBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2lkXSA9IHRydWU7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgICBmb3IgKHZhciBfayA9IDA7IF9rIDwgbW9kdWxlcy5sZW5ndGg7IF9rKyspIHtcclxuICAgICAgdmFyIGl0ZW0gPSBbXS5jb25jYXQobW9kdWxlc1tfa10pO1xyXG4gICAgICBpZiAoZGVkdXBlICYmIGFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaXRlbVswXV0pIHtcclxuICAgICAgICBjb250aW51ZTtcclxuICAgICAgfVxyXG4gICAgICBpZiAodHlwZW9mIGxheWVyICE9PSBcInVuZGVmaW5lZFwiKSB7XHJcbiAgICAgICAgaWYgKHR5cGVvZiBpdGVtWzVdID09PSBcInVuZGVmaW5lZFwiKSB7XHJcbiAgICAgICAgICBpdGVtWzVdID0gbGF5ZXI7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgIGl0ZW1bMV0gPSBcIkBsYXllclwiLmNvbmNhdChpdGVtWzVdLmxlbmd0aCA+IDAgPyBcIiBcIi5jb25jYXQoaXRlbVs1XSkgOiBcIlwiLCBcIiB7XCIpLmNvbmNhdChpdGVtWzFdLCBcIn1cIik7XHJcbiAgICAgICAgICBpdGVtWzVdID0gbGF5ZXI7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICAgIGlmIChtZWRpYSkge1xyXG4gICAgICAgIGlmICghaXRlbVsyXSkge1xyXG4gICAgICAgICAgaXRlbVsyXSA9IG1lZGlhO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICBpdGVtWzFdID0gXCJAbWVkaWEgXCIuY29uY2F0KGl0ZW1bMl0sIFwiIHtcIikuY29uY2F0KGl0ZW1bMV0sIFwifVwiKTtcclxuICAgICAgICAgIGl0ZW1bMl0gPSBtZWRpYTtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgICAgaWYgKHN1cHBvcnRzKSB7XHJcbiAgICAgICAgaWYgKCFpdGVtWzRdKSB7XHJcbiAgICAgICAgICBpdGVtWzRdID0gXCJcIi5jb25jYXQoc3VwcG9ydHMpO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICBpdGVtWzFdID0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChpdGVtWzRdLCBcIikge1wiKS5jb25jYXQoaXRlbVsxXSwgXCJ9XCIpO1xyXG4gICAgICAgICAgaXRlbVs0XSA9IHN1cHBvcnRzO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgICBsaXN0LnB1c2goaXRlbSk7XHJcbiAgICB9XHJcbiAgfTtcclxuICByZXR1cm4gbGlzdDtcclxufTsiLCJcInVzZSBzdHJpY3RcIjtcclxuXHJcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKHVybCwgb3B0aW9ucykge1xyXG4gIGlmICghb3B0aW9ucykge1xyXG4gICAgb3B0aW9ucyA9IHt9O1xyXG4gIH1cclxuICBpZiAoIXVybCkge1xyXG4gICAgcmV0dXJuIHVybDtcclxuICB9XHJcbiAgdXJsID0gU3RyaW5nKHVybC5fX2VzTW9kdWxlID8gdXJsLmRlZmF1bHQgOiB1cmwpO1xyXG5cclxuICAvLyBJZiB1cmwgaXMgYWxyZWFkeSB3cmFwcGVkIGluIHF1b3RlcywgcmVtb3ZlIHRoZW1cclxuICBpZiAoL15bJ1wiXS4qWydcIl0kLy50ZXN0KHVybCkpIHtcclxuICAgIHVybCA9IHVybC5zbGljZSgxLCAtMSk7XHJcbiAgfVxyXG4gIGlmIChvcHRpb25zLmhhc2gpIHtcclxuICAgIHVybCArPSBvcHRpb25zLmhhc2g7XHJcbiAgfVxyXG5cclxuICAvLyBTaG91bGQgdXJsIGJlIHdyYXBwZWQ/XHJcbiAgLy8gU2VlIGh0dHBzOi8vZHJhZnRzLmNzc3dnLm9yZy9jc3MtdmFsdWVzLTMvI3VybHNcclxuICBpZiAoL1tcIicoKSBcXHRcXG5dfCglMjApLy50ZXN0KHVybCkgfHwgb3B0aW9ucy5uZWVkUXVvdGVzKSB7XHJcbiAgICByZXR1cm4gXCJcXFwiXCIuY29uY2F0KHVybC5yZXBsYWNlKC9cIi9nLCAnXFxcXFwiJykucmVwbGFjZSgvXFxuL2csIFwiXFxcXG5cIiksIFwiXFxcIlwiKTtcclxuICB9XHJcbiAgcmV0dXJuIHVybDtcclxufTsiLCJcInVzZSBzdHJpY3RcIjtcclxuXHJcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0ZW0pIHtcclxuICB2YXIgY29udGVudCA9IGl0ZW1bMV07XHJcbiAgdmFyIGNzc01hcHBpbmcgPSBpdGVtWzNdO1xyXG4gIGlmICghY3NzTWFwcGluZykge1xyXG4gICAgcmV0dXJuIGNvbnRlbnQ7XHJcbiAgfVxyXG4gIGlmICh0eXBlb2YgYnRvYSA9PT0gXCJmdW5jdGlvblwiKSB7XHJcbiAgICB2YXIgYmFzZTY0ID0gYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoY3NzTWFwcGluZykpKSk7XHJcbiAgICB2YXIgZGF0YSA9IFwic291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsXCIuY29uY2F0KGJhc2U2NCk7XHJcbiAgICB2YXIgc291cmNlTWFwcGluZyA9IFwiLyojIFwiLmNvbmNhdChkYXRhLCBcIiAqL1wiKTtcclxuICAgIHJldHVybiBbY29udGVudF0uY29uY2F0KFtzb3VyY2VNYXBwaW5nXSkuam9pbihcIlxcblwiKTtcclxuICB9XHJcbiAgcmV0dXJuIFtjb250ZW50XS5qb2luKFwiXFxuXCIpO1xyXG59OyIsIlwidXNlIHN0cmljdFwiO1xyXG5cclxudmFyIHN0eWxlc0luRE9NID0gW107XHJcbmZ1bmN0aW9uIGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpIHtcclxuICB2YXIgcmVzdWx0ID0gLTE7XHJcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBzdHlsZXNJbkRPTS5sZW5ndGg7IGkrKykge1xyXG4gICAgaWYgKHN0eWxlc0luRE9NW2ldLmlkZW50aWZpZXIgPT09IGlkZW50aWZpZXIpIHtcclxuICAgICAgcmVzdWx0ID0gaTtcclxuICAgICAgYnJlYWs7XHJcbiAgICB9XHJcbiAgfVxyXG4gIHJldHVybiByZXN1bHQ7XHJcbn1cclxuZnVuY3Rpb24gbW9kdWxlc1RvRG9tKGxpc3QsIG9wdGlvbnMpIHtcclxuICB2YXIgaWRDb3VudE1hcCA9IHt9O1xyXG4gIHZhciBpZGVudGlmaWVycyA9IFtdO1xyXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgbGlzdC5sZW5ndGg7IGkrKykge1xyXG4gICAgdmFyIGl0ZW0gPSBsaXN0W2ldO1xyXG4gICAgdmFyIGlkID0gb3B0aW9ucy5iYXNlID8gaXRlbVswXSArIG9wdGlvbnMuYmFzZSA6IGl0ZW1bMF07XHJcbiAgICB2YXIgY291bnQgPSBpZENvdW50TWFwW2lkXSB8fCAwO1xyXG4gICAgdmFyIGlkZW50aWZpZXIgPSBcIlwiLmNvbmNhdChpZCwgXCIgXCIpLmNvbmNhdChjb3VudCk7XHJcbiAgICBpZENvdW50TWFwW2lkXSA9IGNvdW50ICsgMTtcclxuICAgIHZhciBpbmRleEJ5SWRlbnRpZmllciA9IGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpO1xyXG4gICAgdmFyIG9iaiA9IHtcclxuICAgICAgY3NzOiBpdGVtWzFdLFxyXG4gICAgICBtZWRpYTogaXRlbVsyXSxcclxuICAgICAgc291cmNlTWFwOiBpdGVtWzNdLFxyXG4gICAgICBzdXBwb3J0czogaXRlbVs0XSxcclxuICAgICAgbGF5ZXI6IGl0ZW1bNV1cclxuICAgIH07XHJcbiAgICBpZiAoaW5kZXhCeUlkZW50aWZpZXIgIT09IC0xKSB7XHJcbiAgICAgIHN0eWxlc0luRE9NW2luZGV4QnlJZGVudGlmaWVyXS5yZWZlcmVuY2VzKys7XHJcbiAgICAgIHN0eWxlc0luRE9NW2luZGV4QnlJZGVudGlmaWVyXS51cGRhdGVyKG9iaik7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICB2YXIgdXBkYXRlciA9IGFkZEVsZW1lbnRTdHlsZShvYmosIG9wdGlvbnMpO1xyXG4gICAgICBvcHRpb25zLmJ5SW5kZXggPSBpO1xyXG4gICAgICBzdHlsZXNJbkRPTS5zcGxpY2UoaSwgMCwge1xyXG4gICAgICAgIGlkZW50aWZpZXI6IGlkZW50aWZpZXIsXHJcbiAgICAgICAgdXBkYXRlcjogdXBkYXRlcixcclxuICAgICAgICByZWZlcmVuY2VzOiAxXHJcbiAgICAgIH0pO1xyXG4gICAgfVxyXG4gICAgaWRlbnRpZmllcnMucHVzaChpZGVudGlmaWVyKTtcclxuICB9XHJcbiAgcmV0dXJuIGlkZW50aWZpZXJzO1xyXG59XHJcbmZ1bmN0aW9uIGFkZEVsZW1lbnRTdHlsZShvYmosIG9wdGlvbnMpIHtcclxuICB2YXIgYXBpID0gb3B0aW9ucy5kb21BUEkob3B0aW9ucyk7XHJcbiAgYXBpLnVwZGF0ZShvYmopO1xyXG4gIHZhciB1cGRhdGVyID0gZnVuY3Rpb24gdXBkYXRlcihuZXdPYmopIHtcclxuICAgIGlmIChuZXdPYmopIHtcclxuICAgICAgaWYgKG5ld09iai5jc3MgPT09IG9iai5jc3MgJiYgbmV3T2JqLm1lZGlhID09PSBvYmoubWVkaWEgJiYgbmV3T2JqLnNvdXJjZU1hcCA9PT0gb2JqLnNvdXJjZU1hcCAmJiBuZXdPYmouc3VwcG9ydHMgPT09IG9iai5zdXBwb3J0cyAmJiBuZXdPYmoubGF5ZXIgPT09IG9iai5sYXllcikge1xyXG4gICAgICAgIHJldHVybjtcclxuICAgICAgfVxyXG4gICAgICBhcGkudXBkYXRlKG9iaiA9IG5ld09iaik7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICBhcGkucmVtb3ZlKCk7XHJcbiAgICB9XHJcbiAgfTtcclxuICByZXR1cm4gdXBkYXRlcjtcclxufVxyXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChsaXN0LCBvcHRpb25zKSB7XHJcbiAgb3B0aW9ucyA9IG9wdGlvbnMgfHwge307XHJcbiAgbGlzdCA9IGxpc3QgfHwgW107XHJcbiAgdmFyIGxhc3RJZGVudGlmaWVycyA9IG1vZHVsZXNUb0RvbShsaXN0LCBvcHRpb25zKTtcclxuICByZXR1cm4gZnVuY3Rpb24gdXBkYXRlKG5ld0xpc3QpIHtcclxuICAgIG5ld0xpc3QgPSBuZXdMaXN0IHx8IFtdO1xyXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBsYXN0SWRlbnRpZmllcnMubGVuZ3RoOyBpKyspIHtcclxuICAgICAgdmFyIGlkZW50aWZpZXIgPSBsYXN0SWRlbnRpZmllcnNbaV07XHJcbiAgICAgIHZhciBpbmRleCA9IGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpO1xyXG4gICAgICBzdHlsZXNJbkRPTVtpbmRleF0ucmVmZXJlbmNlcy0tO1xyXG4gICAgfVxyXG4gICAgdmFyIG5ld0xhc3RJZGVudGlmaWVycyA9IG1vZHVsZXNUb0RvbShuZXdMaXN0LCBvcHRpb25zKTtcclxuICAgIGZvciAodmFyIF9pID0gMDsgX2kgPCBsYXN0SWRlbnRpZmllcnMubGVuZ3RoOyBfaSsrKSB7XHJcbiAgICAgIHZhciBfaWRlbnRpZmllciA9IGxhc3RJZGVudGlmaWVyc1tfaV07XHJcbiAgICAgIHZhciBfaW5kZXggPSBnZXRJbmRleEJ5SWRlbnRpZmllcihfaWRlbnRpZmllcik7XHJcbiAgICAgIGlmIChzdHlsZXNJbkRPTVtfaW5kZXhdLnJlZmVyZW5jZXMgPT09IDApIHtcclxuICAgICAgICBzdHlsZXNJbkRPTVtfaW5kZXhdLnVwZGF0ZXIoKTtcclxuICAgICAgICBzdHlsZXNJbkRPTS5zcGxpY2UoX2luZGV4LCAxKTtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gICAgbGFzdElkZW50aWZpZXJzID0gbmV3TGFzdElkZW50aWZpZXJzO1xyXG4gIH07XHJcbn07IiwiXCJ1c2Ugc3RyaWN0XCI7XHJcblxyXG52YXIgbWVtbyA9IHt9O1xyXG5cclxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXHJcbmZ1bmN0aW9uIGdldFRhcmdldCh0YXJnZXQpIHtcclxuICBpZiAodHlwZW9mIG1lbW9bdGFyZ2V0XSA9PT0gXCJ1bmRlZmluZWRcIikge1xyXG4gICAgdmFyIHN0eWxlVGFyZ2V0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcih0YXJnZXQpO1xyXG5cclxuICAgIC8vIFNwZWNpYWwgY2FzZSB0byByZXR1cm4gaGVhZCBvZiBpZnJhbWUgaW5zdGVhZCBvZiBpZnJhbWUgaXRzZWxmXHJcbiAgICBpZiAod2luZG93LkhUTUxJRnJhbWVFbGVtZW50ICYmIHN0eWxlVGFyZ2V0IGluc3RhbmNlb2Ygd2luZG93LkhUTUxJRnJhbWVFbGVtZW50KSB7XHJcbiAgICAgIHRyeSB7XHJcbiAgICAgICAgLy8gVGhpcyB3aWxsIHRocm93IGFuIGV4Y2VwdGlvbiBpZiBhY2Nlc3MgdG8gaWZyYW1lIGlzIGJsb2NrZWRcclxuICAgICAgICAvLyBkdWUgdG8gY3Jvc3Mtb3JpZ2luIHJlc3RyaWN0aW9uc1xyXG4gICAgICAgIHN0eWxlVGFyZ2V0ID0gc3R5bGVUYXJnZXQuY29udGVudERvY3VtZW50LmhlYWQ7XHJcbiAgICAgIH0gY2F0Y2ggKGUpIHtcclxuICAgICAgICAvLyBpc3RhbmJ1bCBpZ25vcmUgbmV4dFxyXG4gICAgICAgIHN0eWxlVGFyZ2V0ID0gbnVsbDtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gICAgbWVtb1t0YXJnZXRdID0gc3R5bGVUYXJnZXQ7XHJcbiAgfVxyXG4gIHJldHVybiBtZW1vW3RhcmdldF07XHJcbn1cclxuXHJcbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xyXG5mdW5jdGlvbiBpbnNlcnRCeVNlbGVjdG9yKGluc2VydCwgc3R5bGUpIHtcclxuICB2YXIgdGFyZ2V0ID0gZ2V0VGFyZ2V0KGluc2VydCk7XHJcbiAgaWYgKCF0YXJnZXQpIHtcclxuICAgIHRocm93IG5ldyBFcnJvcihcIkNvdWxkbid0IGZpbmQgYSBzdHlsZSB0YXJnZXQuIFRoaXMgcHJvYmFibHkgbWVhbnMgdGhhdCB0aGUgdmFsdWUgZm9yIHRoZSAnaW5zZXJ0JyBwYXJhbWV0ZXIgaXMgaW52YWxpZC5cIik7XHJcbiAgfVxyXG4gIHRhcmdldC5hcHBlbmRDaGlsZChzdHlsZSk7XHJcbn1cclxubW9kdWxlLmV4cG9ydHMgPSBpbnNlcnRCeVNlbGVjdG9yOyIsIlwidXNlIHN0cmljdFwiO1xyXG5cclxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXHJcbmZ1bmN0aW9uIGluc2VydFN0eWxlRWxlbWVudChvcHRpb25zKSB7XHJcbiAgdmFyIGVsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic3R5bGVcIik7XHJcbiAgb3B0aW9ucy5zZXRBdHRyaWJ1dGVzKGVsZW1lbnQsIG9wdGlvbnMuYXR0cmlidXRlcyk7XHJcbiAgb3B0aW9ucy5pbnNlcnQoZWxlbWVudCwgb3B0aW9ucy5vcHRpb25zKTtcclxuICByZXR1cm4gZWxlbWVudDtcclxufVxyXG5tb2R1bGUuZXhwb3J0cyA9IGluc2VydFN0eWxlRWxlbWVudDsiLCJcInVzZSBzdHJpY3RcIjtcclxuXHJcbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xyXG5mdW5jdGlvbiBzZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMoc3R5bGVFbGVtZW50KSB7XHJcbiAgdmFyIG5vbmNlID0gdHlwZW9mIF9fd2VicGFja19ub25jZV9fICE9PSBcInVuZGVmaW5lZFwiID8gX193ZWJwYWNrX25vbmNlX18gOiBudWxsO1xyXG4gIGlmIChub25jZSkge1xyXG4gICAgc3R5bGVFbGVtZW50LnNldEF0dHJpYnV0ZShcIm5vbmNlXCIsIG5vbmNlKTtcclxuICB9XHJcbn1cclxubW9kdWxlLmV4cG9ydHMgPSBzZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXM7IiwiXCJ1c2Ugc3RyaWN0XCI7XHJcblxyXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cclxuZnVuY3Rpb24gYXBwbHkoc3R5bGVFbGVtZW50LCBvcHRpb25zLCBvYmopIHtcclxuICB2YXIgY3NzID0gXCJcIjtcclxuICBpZiAob2JqLnN1cHBvcnRzKSB7XHJcbiAgICBjc3MgKz0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChvYmouc3VwcG9ydHMsIFwiKSB7XCIpO1xyXG4gIH1cclxuICBpZiAob2JqLm1lZGlhKSB7XHJcbiAgICBjc3MgKz0gXCJAbWVkaWEgXCIuY29uY2F0KG9iai5tZWRpYSwgXCIge1wiKTtcclxuICB9XHJcbiAgdmFyIG5lZWRMYXllciA9IHR5cGVvZiBvYmoubGF5ZXIgIT09IFwidW5kZWZpbmVkXCI7XHJcbiAgaWYgKG5lZWRMYXllcikge1xyXG4gICAgY3NzICs9IFwiQGxheWVyXCIuY29uY2F0KG9iai5sYXllci5sZW5ndGggPiAwID8gXCIgXCIuY29uY2F0KG9iai5sYXllcikgOiBcIlwiLCBcIiB7XCIpO1xyXG4gIH1cclxuICBjc3MgKz0gb2JqLmNzcztcclxuICBpZiAobmVlZExheWVyKSB7XHJcbiAgICBjc3MgKz0gXCJ9XCI7XHJcbiAgfVxyXG4gIGlmIChvYmoubWVkaWEpIHtcclxuICAgIGNzcyArPSBcIn1cIjtcclxuICB9XHJcbiAgaWYgKG9iai5zdXBwb3J0cykge1xyXG4gICAgY3NzICs9IFwifVwiO1xyXG4gIH1cclxuICB2YXIgc291cmNlTWFwID0gb2JqLnNvdXJjZU1hcDtcclxuICBpZiAoc291cmNlTWFwICYmIHR5cGVvZiBidG9hICE9PSBcInVuZGVmaW5lZFwiKSB7XHJcbiAgICBjc3MgKz0gXCJcXG4vKiMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LFwiLmNvbmNhdChidG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShzb3VyY2VNYXApKSkpLCBcIiAqL1wiKTtcclxuICB9XHJcblxyXG4gIC8vIEZvciBvbGQgSUVcclxuICAvKiBpc3RhbmJ1bCBpZ25vcmUgaWYgICovXHJcbiAgb3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybShjc3MsIHN0eWxlRWxlbWVudCwgb3B0aW9ucy5vcHRpb25zKTtcclxufVxyXG5mdW5jdGlvbiByZW1vdmVTdHlsZUVsZW1lbnQoc3R5bGVFbGVtZW50KSB7XHJcbiAgLy8gaXN0YW5idWwgaWdub3JlIGlmXHJcbiAgaWYgKHN0eWxlRWxlbWVudC5wYXJlbnROb2RlID09PSBudWxsKSB7XHJcbiAgICByZXR1cm4gZmFsc2U7XHJcbiAgfVxyXG4gIHN0eWxlRWxlbWVudC5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKHN0eWxlRWxlbWVudCk7XHJcbn1cclxuXHJcbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xyXG5mdW5jdGlvbiBkb21BUEkob3B0aW9ucykge1xyXG4gIGlmICh0eXBlb2YgZG9jdW1lbnQgPT09IFwidW5kZWZpbmVkXCIpIHtcclxuICAgIHJldHVybiB7XHJcbiAgICAgIHVwZGF0ZTogZnVuY3Rpb24gdXBkYXRlKCkge30sXHJcbiAgICAgIHJlbW92ZTogZnVuY3Rpb24gcmVtb3ZlKCkge31cclxuICAgIH07XHJcbiAgfVxyXG4gIHZhciBzdHlsZUVsZW1lbnQgPSBvcHRpb25zLmluc2VydFN0eWxlRWxlbWVudChvcHRpb25zKTtcclxuICByZXR1cm4ge1xyXG4gICAgdXBkYXRlOiBmdW5jdGlvbiB1cGRhdGUob2JqKSB7XHJcbiAgICAgIGFwcGx5KHN0eWxlRWxlbWVudCwgb3B0aW9ucywgb2JqKTtcclxuICAgIH0sXHJcbiAgICByZW1vdmU6IGZ1bmN0aW9uIHJlbW92ZSgpIHtcclxuICAgICAgcmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlRWxlbWVudCk7XHJcbiAgICB9XHJcbiAgfTtcclxufVxyXG5tb2R1bGUuZXhwb3J0cyA9IGRvbUFQSTsiLCJcInVzZSBzdHJpY3RcIjtcclxuXHJcbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xyXG5mdW5jdGlvbiBzdHlsZVRhZ1RyYW5zZm9ybShjc3MsIHN0eWxlRWxlbWVudCkge1xyXG4gIGlmIChzdHlsZUVsZW1lbnQuc3R5bGVTaGVldCkge1xyXG4gICAgc3R5bGVFbGVtZW50LnN0eWxlU2hlZXQuY3NzVGV4dCA9IGNzcztcclxuICB9IGVsc2Uge1xyXG4gICAgd2hpbGUgKHN0eWxlRWxlbWVudC5maXJzdENoaWxkKSB7XHJcbiAgICAgIHN0eWxlRWxlbWVudC5yZW1vdmVDaGlsZChzdHlsZUVsZW1lbnQuZmlyc3RDaGlsZCk7XHJcbiAgICB9XHJcbiAgICBzdHlsZUVsZW1lbnQuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoY3NzKSk7XHJcbiAgfVxyXG59XHJcbm1vZHVsZS5leHBvcnRzID0gc3R5bGVUYWdUcmFuc2Zvcm07IiwiLy8gVGhlIG1vZHVsZSBjYWNoZVxudmFyIF9fd2VicGFja19tb2R1bGVfY2FjaGVfXyA9IHt9O1xuXG4vLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxuZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuXHQvLyBDaGVjayBpZiBtb2R1bGUgaXMgaW4gY2FjaGVcblx0dmFyIGNhY2hlZE1vZHVsZSA9IF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF07XG5cdGlmIChjYWNoZWRNb2R1bGUgIT09IHVuZGVmaW5lZCkge1xuXHRcdHJldHVybiBjYWNoZWRNb2R1bGUuZXhwb3J0cztcblx0fVxuXHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuXHR2YXIgbW9kdWxlID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXSA9IHtcblx0XHRpZDogbW9kdWxlSWQsXG5cdFx0Ly8gbm8gbW9kdWxlLmxvYWRlZCBuZWVkZWRcblx0XHRleHBvcnRzOiB7fVxuXHR9O1xuXG5cdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuXHRfX3dlYnBhY2tfbW9kdWxlc19fW21vZHVsZUlkXShtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKTtcblxuXHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuXHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG59XG5cbi8vIGV4cG9zZSB0aGUgbW9kdWxlcyBvYmplY3QgKF9fd2VicGFja19tb2R1bGVzX18pXG5fX3dlYnBhY2tfcmVxdWlyZV9fLm0gPSBfX3dlYnBhY2tfbW9kdWxlc19fO1xuXG4iLCIvLyBnZXREZWZhdWx0RXhwb3J0IGZ1bmN0aW9uIGZvciBjb21wYXRpYmlsaXR5IHdpdGggbm9uLWhhcm1vbnkgbW9kdWxlc1xuX193ZWJwYWNrX3JlcXVpcmVfXy5uID0gKG1vZHVsZSkgPT4ge1xuXHR2YXIgZ2V0dGVyID0gbW9kdWxlICYmIG1vZHVsZS5fX2VzTW9kdWxlID9cblx0XHQoKSA9PiAobW9kdWxlWydkZWZhdWx0J10pIDpcblx0XHQoKSA9PiAobW9kdWxlKTtcblx0X193ZWJwYWNrX3JlcXVpcmVfXy5kKGdldHRlciwgeyBhOiBnZXR0ZXIgfSk7XG5cdHJldHVybiBnZXR0ZXI7XG59OyIsIi8vIGRlZmluZSBnZXR0ZXIgZnVuY3Rpb25zIGZvciBoYXJtb255IGV4cG9ydHNcbl9fd2VicGFja19yZXF1aXJlX18uZCA9IChleHBvcnRzLCBkZWZpbml0aW9uKSA9PiB7XG5cdGZvcih2YXIga2V5IGluIGRlZmluaXRpb24pIHtcblx0XHRpZihfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZGVmaW5pdGlvbiwga2V5KSAmJiAhX193ZWJwYWNrX3JlcXVpcmVfXy5vKGV4cG9ydHMsIGtleSkpIHtcblx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBrZXksIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBkZWZpbml0aW9uW2tleV0gfSk7XG5cdFx0fVxuXHR9XG59OyIsIl9fd2VicGFja19yZXF1aXJlX18uZyA9IChmdW5jdGlvbigpIHtcblx0aWYgKHR5cGVvZiBnbG9iYWxUaGlzID09PSAnb2JqZWN0JykgcmV0dXJuIGdsb2JhbFRoaXM7XG5cdHRyeSB7XG5cdFx0cmV0dXJuIHRoaXMgfHwgbmV3IEZ1bmN0aW9uKCdyZXR1cm4gdGhpcycpKCk7XG5cdH0gY2F0Y2ggKGUpIHtcblx0XHRpZiAodHlwZW9mIHdpbmRvdyA9PT0gJ29iamVjdCcpIHJldHVybiB3aW5kb3c7XG5cdH1cbn0pKCk7IiwiX193ZWJwYWNrX3JlcXVpcmVfXy5vID0gKG9iaiwgcHJvcCkgPT4gKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmosIHByb3ApKSIsInZhciBzY3JpcHRVcmw7XG5pZiAoX193ZWJwYWNrX3JlcXVpcmVfXy5nLmltcG9ydFNjcmlwdHMpIHNjcmlwdFVybCA9IF9fd2VicGFja19yZXF1aXJlX18uZy5sb2NhdGlvbiArIFwiXCI7XG52YXIgZG9jdW1lbnQgPSBfX3dlYnBhY2tfcmVxdWlyZV9fLmcuZG9jdW1lbnQ7XG5pZiAoIXNjcmlwdFVybCAmJiBkb2N1bWVudCkge1xuXHRpZiAoZG9jdW1lbnQuY3VycmVudFNjcmlwdClcblx0XHRzY3JpcHRVcmwgPSBkb2N1bWVudC5jdXJyZW50U2NyaXB0LnNyYztcblx0aWYgKCFzY3JpcHRVcmwpIHtcblx0XHR2YXIgc2NyaXB0cyA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKFwic2NyaXB0XCIpO1xuXHRcdGlmKHNjcmlwdHMubGVuZ3RoKSB7XG5cdFx0XHR2YXIgaSA9IHNjcmlwdHMubGVuZ3RoIC0gMTtcblx0XHRcdHdoaWxlIChpID4gLTEgJiYgIXNjcmlwdFVybCkgc2NyaXB0VXJsID0gc2NyaXB0c1tpLS1dLnNyYztcblx0XHR9XG5cdH1cbn1cbi8vIFdoZW4gc3VwcG9ydGluZyBicm93c2VycyB3aGVyZSBhbiBhdXRvbWF0aWMgcHVibGljUGF0aCBpcyBub3Qgc3VwcG9ydGVkIHlvdSBtdXN0IHNwZWNpZnkgYW4gb3V0cHV0LnB1YmxpY1BhdGggbWFudWFsbHkgdmlhIGNvbmZpZ3VyYXRpb25cbi8vIG9yIHBhc3MgYW4gZW1wdHkgc3RyaW5nIChcIlwiKSBhbmQgc2V0IHRoZSBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyB2YXJpYWJsZSBmcm9tIHlvdXIgY29kZSB0byB1c2UgeW91ciBvd24gbG9naWMuXG5pZiAoIXNjcmlwdFVybCkgdGhyb3cgbmV3IEVycm9yKFwiQXV0b21hdGljIHB1YmxpY1BhdGggaXMgbm90IHN1cHBvcnRlZCBpbiB0aGlzIGJyb3dzZXJcIik7XG5zY3JpcHRVcmwgPSBzY3JpcHRVcmwucmVwbGFjZSgvIy4qJC8sIFwiXCIpLnJlcGxhY2UoL1xcPy4qJC8sIFwiXCIpLnJlcGxhY2UoL1xcL1teXFwvXSskLywgXCIvXCIpO1xuX193ZWJwYWNrX3JlcXVpcmVfXy5wID0gc2NyaXB0VXJsOyIsIl9fd2VicGFja19yZXF1aXJlX18uYiA9IGRvY3VtZW50LmJhc2VVUkkgfHwgc2VsZi5sb2NhdGlvbi5ocmVmO1xuXG4vLyBvYmplY3QgdG8gc3RvcmUgbG9hZGVkIGFuZCBsb2FkaW5nIGNodW5rc1xuLy8gdW5kZWZpbmVkID0gY2h1bmsgbm90IGxvYWRlZCwgbnVsbCA9IGNodW5rIHByZWxvYWRlZC9wcmVmZXRjaGVkXG4vLyBbcmVzb2x2ZSwgcmVqZWN0LCBQcm9taXNlXSA9IGNodW5rIGxvYWRpbmcsIDAgPSBjaHVuayBsb2FkZWRcbnZhciBpbnN0YWxsZWRDaHVua3MgPSB7XG5cdDE3OTogMFxufTtcblxuLy8gbm8gY2h1bmsgb24gZGVtYW5kIGxvYWRpbmdcblxuLy8gbm8gcHJlZmV0Y2hpbmdcblxuLy8gbm8gcHJlbG9hZGVkXG5cbi8vIG5vIEhNUlxuXG4vLyBubyBITVIgbWFuaWZlc3RcblxuLy8gbm8gb24gY2h1bmtzIGxvYWRlZFxuXG4vLyBubyBqc29ucCBmdW5jdGlvbiIsIl9fd2VicGFja19yZXF1aXJlX18ubmMgPSB1bmRlZmluZWQ7IiwiXG4gICAgICBpbXBvcnQgQVBJIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzXCI7XG4gICAgICBpbXBvcnQgZG9tQVBJIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRGbiBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydEJ5U2VsZWN0b3IuanNcIjtcbiAgICAgIGltcG9ydCBzZXRBdHRyaWJ1dGVzIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0U3R5bGVFbGVtZW50IGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0U3R5bGVFbGVtZW50LmpzXCI7XG4gICAgICBpbXBvcnQgc3R5bGVUYWdUcmFuc2Zvcm1GbiBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlVGFnVHJhbnNmb3JtLmpzXCI7XG4gICAgICBpbXBvcnQgY29udGVudCwgKiBhcyBuYW1lZEV4cG9ydCBmcm9tIFwiISEuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL3N0eWxlLmNzc1wiO1xuICAgICAgXG4gICAgICBcblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybSA9IHN0eWxlVGFnVHJhbnNmb3JtRm47XG5vcHRpb25zLnNldEF0dHJpYnV0ZXMgPSBzZXRBdHRyaWJ1dGVzO1xuXG4gICAgICBvcHRpb25zLmluc2VydCA9IGluc2VydEZuLmJpbmQobnVsbCwgXCJoZWFkXCIpO1xuICAgIFxub3B0aW9ucy5kb21BUEkgPSBkb21BUEk7XG5vcHRpb25zLmluc2VydFN0eWxlRWxlbWVudCA9IGluc2VydFN0eWxlRWxlbWVudDtcblxudmFyIHVwZGF0ZSA9IEFQSShjb250ZW50LCBvcHRpb25zKTtcblxuXG5cbmV4cG9ydCAqIGZyb20gXCIhIS4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vc3R5bGUuY3NzXCI7XG4gICAgICAgZXhwb3J0IGRlZmF1bHQgY29udGVudCAmJiBjb250ZW50LmxvY2FscyA/IGNvbnRlbnQubG9jYWxzIDogdW5kZWZpbmVkO1xuIiwiZnVuY3Rpb24gZGlzcGxheSgpIHtcclxuICAgIGNvbnN0IGNvbnRlbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKVxyXG4gICAgY29udGVudC5pZCA9ICdjb250ZW50JztcclxuXHJcbiAgICBjb25zdCBhcHBldGl6ZXJzID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XHJcbiAgICBhcHBldGl6ZXJzLmlkID0gJ2FwcGV0aXplcnMnO1xyXG4gICAgY29uc3QgYXBwZXRpemVyc0hlYWRpbmcgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdoMicpO1xyXG4gICAgYXBwZXRpemVyc0hlYWRpbmcuaW5uZXJIVE1MID0gJ0FwcGV0aXplcnMnXHJcbiAgICBhcHBldGl6ZXJzLmFwcGVuZENoaWxkKGFwcGV0aXplcnNIZWFkaW5nKTtcclxuXHJcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IEFwcGV0aXplcnMubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICBsZXQgYXBwZXRpemVyID0gQXBwZXRpemVyc1tpXTtcclxuXHJcbiAgICAgICAgY29uc3QgbmFtZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2g0Jyk7XHJcbiAgICAgICAgbmFtZS50ZXh0Q29udGVudCA9IGFwcGV0aXplci5uYW1lO1xyXG4gICAgICAgIG5hbWUuaWQgPSAnbmFtZSc7XHJcbiAgICAgICAgY29uc3QgZGVzY3JpcHRpb24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdwJyk7XHJcbiAgICAgICAgZGVzY3JpcHRpb24udGV4dENvbnRlbnQgPSBhcHBldGl6ZXIuZGVzY3JpcHRpb247XHJcbiAgICAgICAgZGVzY3JpcHRpb24uaWQgPSAnZGVzY3JpcHRpb24nO1xyXG4gICAgICAgIGNvbnN0IGxlZnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcclxuICAgICAgICBsZWZ0LmNsYXNzTGlzdCA9ICdsZWZ0LWNvbHVtbic7XHJcbiAgICAgICAgbGVmdC5hcHBlbmRDaGlsZChuYW1lKTtcclxuICAgICAgICBsZWZ0LmFwcGVuZENoaWxkKGRlc2NyaXB0aW9uKTtcclxuICAgICAgICBcclxuICAgICAgICBjb25zdCBwcmljZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2g0Jyk7XHJcbiAgICAgICAgcHJpY2UudGV4dENvbnRlbnQgPSBhcHBldGl6ZXIucHJpY2U7XHJcbiAgICAgICAgY29uc3QgcmlnaHQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcclxuICAgICAgICByaWdodC5jbGFzc0xpc3QgPSAncmlnaHQtY29sdW1uJztcclxuICAgICAgICByaWdodC5hcHBlbmRDaGlsZChwcmljZSk7XHJcbiAgICAgICAgXHJcbiAgICAgICAgY29uc3QgZGlzaCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xyXG4gICAgICAgIGRpc2guYXBwZW5kQ2hpbGQobGVmdCk7XHJcbiAgICAgICAgZGlzaC5hcHBlbmRDaGlsZChyaWdodCk7XHJcbiAgICAgICAgZGlzaC5jbGFzc0xpc3QgPSAnZGlzaCc7XHJcblxyXG4gICAgICAgIGFwcGV0aXplcnMuYXBwZW5kQ2hpbGQoZGlzaCk7XHJcbiAgICB9XHJcblxyXG4gICAgY29uc3QgbWFpbkNvdXJzZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xyXG4gICAgbWFpbkNvdXJzZS5pZCA9ICdhcHBldGl6ZXJzJztcclxuICAgIGNvbnN0IG1haW5Db3Vyc2VIZWFkaW5nID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaDInKTtcclxuICAgIG1haW5Db3Vyc2VIZWFkaW5nLmlubmVySFRNTCA9ICdNYWluIENvdXJzZSdcclxuICAgIG1haW5Db3Vyc2UuYXBwZW5kQ2hpbGQobWFpbkNvdXJzZUhlYWRpbmcpO1xyXG5cclxuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgTWFpbkNvdXJzZS5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgIGxldCBtYWluY291cnNlID0gTWFpbkNvdXJzZVtpXTtcclxuXHJcbiAgICAgICAgY29uc3QgbmFtZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2g0Jyk7XHJcbiAgICAgICAgbmFtZS50ZXh0Q29udGVudCA9IG1haW5jb3Vyc2UubmFtZTtcclxuICAgICAgICBuYW1lLmlkID0gJ25hbWUnO1xyXG4gICAgICAgIGNvbnN0IGRlc2NyaXB0aW9uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgncCcpO1xyXG4gICAgICAgIGRlc2NyaXB0aW9uLnRleHRDb250ZW50ID0gbWFpbmNvdXJzZS5kZXNjcmlwdGlvbjtcclxuICAgICAgICBkZXNjcmlwdGlvbi5pZCA9ICdkZXNjcmlwdGlvbic7XHJcbiAgICAgICAgY29uc3QgbGVmdCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xyXG4gICAgICAgIGxlZnQuY2xhc3NMaXN0ID0gJ2xlZnQtY29sdW1uJztcclxuICAgICAgICBsZWZ0LmFwcGVuZENoaWxkKG5hbWUpO1xyXG4gICAgICAgIGxlZnQuYXBwZW5kQ2hpbGQoZGVzY3JpcHRpb24pO1xyXG4gICAgICAgIFxyXG4gICAgICAgIGNvbnN0IHByaWNlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaDQnKTtcclxuICAgICAgICBwcmljZS50ZXh0Q29udGVudCA9IG1haW5jb3Vyc2UucHJpY2U7XHJcbiAgICAgICAgY29uc3QgcmlnaHQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcclxuICAgICAgICByaWdodC5jbGFzc0xpc3QgPSAncmlnaHQtY29sdW1uJztcclxuICAgICAgICByaWdodC5hcHBlbmRDaGlsZChwcmljZSk7XHJcbiAgICAgICAgXHJcbiAgICAgICAgY29uc3QgZGlzaCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xyXG4gICAgICAgIGRpc2guYXBwZW5kQ2hpbGQobGVmdCk7XHJcbiAgICAgICAgZGlzaC5hcHBlbmRDaGlsZChyaWdodCk7XHJcbiAgICAgICAgZGlzaC5jbGFzc0xpc3QgPSAnZGlzaCc7XHJcblxyXG4gICAgICAgIG1haW5Db3Vyc2UuYXBwZW5kQ2hpbGQoZGlzaCk7XHJcbiAgICB9XHJcblxyXG4gICAgY29uc3QgZGVzZXJ0cyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xyXG4gICAgZGVzZXJ0cy5pZCA9ICdkZXNlcnRzJztcclxuICAgIGNvbnN0IGRlc2VydHNIZWFkaW5nID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaDInKTtcclxuICAgIGRlc2VydHNIZWFkaW5nLmlubmVySFRNTCA9ICdEZXNlcnRzJ1xyXG4gICAgZGVzZXJ0cy5hcHBlbmRDaGlsZChkZXNlcnRzSGVhZGluZyk7XHJcblxyXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBEZXNlcnRzLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgbGV0IGRlc2VydCA9IERlc2VydHNbaV07XHJcblxyXG4gICAgICAgIGNvbnN0IG5hbWUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdoNCcpO1xyXG4gICAgICAgIG5hbWUudGV4dENvbnRlbnQgPSBkZXNlcnQubmFtZTtcclxuICAgICAgICBuYW1lLmlkID0gJ25hbWUnO1xyXG4gICAgICAgIGNvbnN0IGRlc2NyaXB0aW9uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgncCcpO1xyXG4gICAgICAgIGRlc2NyaXB0aW9uLnRleHRDb250ZW50ID0gZGVzZXJ0LmRlc2NyaXB0aW9uO1xyXG4gICAgICAgIGRlc2NyaXB0aW9uLmlkID0gJ2Rlc2NyaXB0aW9uJztcclxuICAgICAgICBjb25zdCBsZWZ0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XHJcbiAgICAgICAgbGVmdC5jbGFzc0xpc3QgPSAnbGVmdC1jb2x1bW4nO1xyXG4gICAgICAgIGxlZnQuYXBwZW5kQ2hpbGQobmFtZSk7XHJcbiAgICAgICAgbGVmdC5hcHBlbmRDaGlsZChkZXNjcmlwdGlvbik7XHJcbiAgICAgICAgXHJcbiAgICAgICAgY29uc3QgcHJpY2UgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdoNCcpO1xyXG4gICAgICAgIHByaWNlLnRleHRDb250ZW50ID0gZGVzZXJ0LnByaWNlO1xyXG4gICAgICAgIGNvbnN0IHJpZ2h0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XHJcbiAgICAgICAgcmlnaHQuY2xhc3NMaXN0ID0gJ3JpZ2h0LWNvbHVtbic7XHJcbiAgICAgICAgcmlnaHQuYXBwZW5kQ2hpbGQocHJpY2UpO1xyXG4gICAgICAgIFxyXG4gICAgICAgIGNvbnN0IGRpc2ggPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcclxuICAgICAgICBkaXNoLmFwcGVuZENoaWxkKGxlZnQpO1xyXG4gICAgICAgIGRpc2guYXBwZW5kQ2hpbGQocmlnaHQpO1xyXG4gICAgICAgIGRpc2guY2xhc3NMaXN0ID0gJ2Rpc2gnO1xyXG5cclxuICAgICAgICBkZXNlcnRzLmFwcGVuZENoaWxkKGRpc2gpO1xyXG4gICAgfVxyXG5cclxuICAgIGNvbnRlbnQuYXBwZW5kQ2hpbGQoYXBwZXRpemVycyk7XHJcbiAgICBjb250ZW50LmFwcGVuZENoaWxkKG1haW5Db3Vyc2UpO1xyXG4gICAgY29udGVudC5hcHBlbmRDaGlsZChkZXNlcnRzKTtcclxuICAgIHJldHVybiBjb250ZW50O1xyXG59XHJcblxyXG5mdW5jdGlvbiBEaXNoKG5hbWUsIGRlc2NyaXB0aW9uLCBwcmljZSkge1xyXG4gICAgcmV0dXJuIHsgbmFtZSwgZGVzY3JpcHRpb24sIHByaWNlIH07XHJcbn1cclxuXHJcbmNvbnN0IEFwcGV0aXplcnMgPSBbXHJcbiAgICBEaXNoKGBUcnVmZmxlLWluZnVzZWQgTXVzaHJvb20gQnJ1c2NoZXR0YWAsXHJcbiAgICAgICAgYFNhdXTDqWVkIHdpbGQgbXVzaHJvb21zIHdpdGggYSBoaW50IG9mIHRydWZmbGUsIHNlcnZlZCBvbiB0b2FzdGVkIGFydGlzYW4gYnJlYWRgLFxyXG4gICAgICAgIGAxNDk5YCksXHJcbiAgICBEaXNoKGBMb2JzdGVyIEJpc3F1ZWAsXHJcbiAgICAgICAgYENyZWFteSBzb3VwIGVucmljaGVkIHdpdGggc3VjY3VsZW50IGNodW5rcyBvZiBsb2JzdGVyLCBmaW5pc2hlZCB3aXRoIGEgZHJpenpsZSBvZiBoZXJiLWluZnVzZWQgb2lsYCxcclxuICAgICAgICBgMTI5OWApLFxyXG4gICAgRGlzaChgU21va2VkIFNhbG1vbiBDcm9zdGluaWAsXHJcbiAgICAgICAgYFRoaW5seSBzbGljZWQgc21va2VkIHNhbG1vbiBvbiB0b2FzdGVkIGJhZ3VldHRlLCB0b3BwZWQgd2l0aCBkaWxsIGNyZWFtIGNoZWVzZSBhbmQgY2FwZXJzYCxcclxuICAgICAgICBgOTk5YClcclxuXTtcclxuXHJcbmNvbnN0IE1haW5Db3Vyc2UgPSBbXHJcbiAgICBEaXNoKGBGaWxldCBNaWdub24gd2l0aCBQb3J0IFdpbmUgUmVkdWN0aW9uYCxcclxuICAgICAgICBgVGVuZGVyLCBncmlsbGVkIGZpbGV0IG1pZ25vbiBzZXJ2ZWQgd2l0aCBhIHJpY2ggcG9ydCB3aW5lIHJlZHVjdGlvbiwgYWNjb21wYW5pZWQgYnkgcm9hc3RlZCBmaW5nZXJsaW5nIHBvdGF0b2VzIGFuZCBzYXV0w6llZCBzZWFzb25hbCB2ZWdldGFibGVzYCxcclxuICAgICAgICBgMTc5OWApLFxyXG4gICAgRGlzaChgUGlzdGFjaGlvLUNydXN0ZWQgQ2hpbGVhbiBTZWEgQmFzc2AsXHJcbiAgICAgICAgYE92ZW4tYmFrZWQgQ2hpbGVhbiBzZWEgYmFzcyBjb2F0ZWQgd2l0aCBhIGNydW5jaHkgcGlzdGFjaGlvIGNydXN0LCBzZXJ2ZWQgd2l0aCBsZW1vbiBiZXVycmUgYmxhbmMsIHdpbGQgcmljZSBwaWxhZiwgYW5kIGdyaWxsZWQgYXNwYXJhZ3VzYCxcclxuICAgICAgICBgMTU5OWApLFxyXG4gICAgRGlzaChgV2lsZCBNdXNocm9vbSBSaXNvdHRvYCxcclxuICAgICAgICBgQ3JlYW15IEFyYm9yaW8gcmljZSBzaW1tZXJlZCB3aXRoIGEgbWVkbGV5IG9mIHdpbGQgbXVzaHJvb21zLCBQYXJtZXNhbiBjaGVlc2UsIGFuZCBmcmVzaCBoZXJicywgZmluaXNoZWQgd2l0aCBhIGRyaXp6bGUgb2YgdHJ1ZmZsZSBvaWxgLFxyXG4gICAgICAgIGAxNDk5YCksXHJcbiAgICBEaXNoKGBNb3JvY2NhbiBTcGljZWQgTGFtYiBDaG9wYCxcclxuICAgICAgICBgR3JpbGxlZCBsYW1iIGNob3BzIG1hcmluYXRlZCBpbiBhcm9tYXRpYyBNb3JvY2NhbiBzcGljZXMsIHNlcnZlZCB3aXRoIG1pbnQgeW9ndXJ0IHNhdWNlLCBjb3VzY291cywgYW5kIGdyaWxsZWQgdmVnZXRhYmxlc2AsXHJcbiAgICAgICAgYDE5OTlgKVxyXG5dXHJcblxyXG5jb25zdCBEZXNlcnRzID0gW1xyXG4gICAgRGlzaChgRGVjYWRlbnQgQ2hvY29sYXRlIFNvdWZmbMOpYCxcclxuICAgICAgICBgQSByaWNoIGFuZCB2ZWx2ZXR5IGNob2NvbGF0ZSBzb3VmZmzDqSBzZXJ2ZWQgd2l0aCBhIHNjb29wIG9mIGhvbWVtYWRlIHZhbmlsbGEgYmVhbiBpY2UgY3JlYW1gLFxyXG4gICAgICAgIGA3OTlgKSxcclxuICAgIERpc2goYExlbW9uIEJsdWViZXJyeSBUYXJ0YCxcclxuICAgICAgICBgQnV0dGVyeSB0YXJ0IHNoZWxsIGZpbGxlZCB3aXRoIHRhbmd5IGxlbW9uIGN1c3RhcmQgYW5kIHRvcHBlZCB3aXRoIGZyZXNoIGJsdWViZXJyaWVzIGFuZCBhIGR1c3Rpbmcgb2YgcG93ZGVyZWQgc3VnYXJgLFxyXG4gICAgICAgIGA0OTlgKSxcclxuICAgIERpc2goYENyw6htZSBCcsO7bMOpZSBUcmlvYCxcclxuICAgICAgICBgQSB0cmlvIG9mIGNsYXNzaWMgdmFuaWxsYSBiZWFuLCBjaG9jb2xhdGUsIGFuZCBsYXZlbmRlci1pbmZ1c2VkIGNyw6htZSBicsO7bMOpZSwgYWNjb21wYW5pZWQgYnkgYWxtb25kIGJpc2NvdHRpYCxcclxuICAgICAgICBgNTk5YCksXHJcbl1cclxuXHJcbmV4cG9ydCB7IGRpc3BsYXkgfSIsImltcG9ydCAnLi9zdHlsZS5jc3MnO1xyXG5pbXBvcnQge2Rpc3BsYXkgYXMgZGlzcGxheUhvbWV9IGZyb20gJy4vaG9tZS5qcyc7XHJcbmltcG9ydCB7ZGlzcGxheSBhcyBkaXNwbGF5TWVudX0gZnJvbSAnLi9tZW51LmpzJztcclxuaW1wb3J0IHtkaXNwbGF5IGFzIGRpc3BsYXlDb250YWN0fSBmcm9tICcuL2NvbnRhY3QuanMnO1xyXG5cclxuZnVuY3Rpb24gZGlzcGxheU5hdmlnYXRpb25CYXIgKCkge1xyXG4gICAgZG9jdW1lbnQuYm9keS5pbm5lckhUTUwgPSAnJztcclxuXHJcbiAgICBjb25zdCBuYXZpZ2F0aW9uQmFyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XHJcbiAgICBuYXZpZ2F0aW9uQmFyLmlkID0gJ25hdmlnYXRpb24tYmFyJztcclxuXHJcbiAgICBjb25zdCBob21lID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYnV0dG9uJyk7XHJcbiAgICBob21lLmlkID0gJ2hvbWUnO1xyXG4gICAgaG9tZS50ZXh0Q29udGVudCA9ICdIb21lJztcclxuXHJcbiAgICBjb25zdCBtZW51ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYnV0dG9uJyk7XHJcbiAgICBtZW51LmlkID0gJ21lbnUnO1xyXG4gICAgbWVudS50ZXh0Q29udGVudCA9ICdNZW51JztcclxuXHJcbiAgICBjb25zdCBjb250YWN0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYnV0dG9uJyk7XHJcbiAgICBjb250YWN0LmlkID0gJ2NvbnRhY3QnO1xyXG4gICAgY29udGFjdC50ZXh0Q29udGVudCA9ICdDb250YWN0IFVzJztcclxuXHJcbiAgICBob21lLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgbG9hZEhvbWUpO1xyXG4gICAgbWVudS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGxvYWRNZW51KTtcclxuICAgIGNvbnRhY3QuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBsb2FkQ29udGFjdCk7XHJcblxyXG4gICAgbmF2aWdhdGlvbkJhci5hcHBlbmRDaGlsZChob21lKTtcclxuICAgIG5hdmlnYXRpb25CYXIuYXBwZW5kQ2hpbGQobWVudSk7XHJcbiAgICBuYXZpZ2F0aW9uQmFyLmFwcGVuZENoaWxkKGNvbnRhY3QpO1xyXG5cclxuICAgIHJldHVybiBuYXZpZ2F0aW9uQmFyO1xyXG59XHJcblxyXG5mdW5jdGlvbiBsb2FkSG9tZSAoKSB7XHJcbiAgICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKGRpc3BsYXlOYXZpZ2F0aW9uQmFyKCkpO1xyXG4gICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI2hvbWUnKS5jbGFzc0xpc3QgPSAnc2VsZWN0ZWQnO1xyXG4gICAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChkaXNwbGF5SG9tZSgpKTtcclxufVxyXG5cclxuZnVuY3Rpb24gbG9hZE1lbnUgKCkge1xyXG4gICAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChkaXNwbGF5TmF2aWdhdGlvbkJhcigpKTtcclxuICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNtZW51JykuY2xhc3NMaXN0ID0gJ3NlbGVjdGVkJztcclxuICAgIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQoZGlzcGxheU1lbnUoKSk7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGxvYWRDb250YWN0ICgpIHtcclxuICAgIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQoZGlzcGxheU5hdmlnYXRpb25CYXIoKSk7XHJcbiAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjY29udGFjdCcpLmNsYXNzTGlzdCA9ICdzZWxlY3RlZCc7XHJcbiAgICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKGRpc3BsYXlDb250YWN0KCkpO1xyXG59XHJcblxyXG5sb2FkSG9tZSgpOyIsImZ1bmN0aW9uIGRpc3BsYXkoKSB7XHJcbiAgICBjb25zdCBjb250ZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2JylcclxuICAgIGNvbnRlbnQuaWQgPSAnY29udGVudCc7XHJcblxyXG4gICAgY29uc3QgbmFtZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2gxJyk7XHJcbiAgICBuYW1lLmlubmVySFRNTCA9ICdFcGljdXJlYW4gRXNjYXBlJztcclxuXHJcbiAgICBjb25zdCBoZWFkbGluZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2g0Jyk7XHJcbiAgICBoZWFkbGluZS5pbm5lckhUTUwgPSAnRW1iYXJrIG9uIGFuIEVwaWN1cmVhbiBFc2NhcGU6IEluZHVsZ2UgaW4gQ3VsaW5hcnkgQmxpc3MgYXQgT3VyIEV4cXVpc2l0ZSBSZXN0YXVyYW50JztcclxuXHJcbiAgICBjb25zdCBwYXJhZ3JhcGhPbmUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdwJyk7XHJcbiAgICBwYXJhZ3JhcGhPbmUuaW5uZXJIVE1MID0gYFdlbGNvbWUgdG8gRXBpY3VyZWFuIEVzY2FwZSwgd2hlcmUgZ2FzdHJvbm9teSB0YWtlcyBjZW50ZXIgc3RhZ2UgYW5kIGN1bGluYXJ5IGRyZWFtcyBjb21lIHRydWUuIFxyXG4gICAgICAgIE5lc3RsZWQgaW4gdGhlIGhlYXJ0IG9mIE11bWJhaSwgb3VyIHJlc3RhdXJhbnQgaXMgYSBoYXZlbiBmb3IgZm9vZCBlbnRodXNpYXN0cyBzZWVraW5nIGFuIFxyXG4gICAgICAgIGV4dHJhb3JkaW5hcnkgZGluaW5nIGV4cGVyaWVuY2UuYDtcclxuXHJcbiAgICBjb25zdCBwYXJhZ3JhcGhUd28gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdwJyk7XHJcbiAgICBwYXJhZ3JhcGhUd28uaW5uZXJIVE1MID0gYFByZXBhcmUgdG8gYmUgdHJhbnNwb3J0ZWQgb24gYSBqb3VybmV5IG9mIGZsYXZvcnMsIHRleHR1cmVzLCBhbmQgYXJvbWFzIGFzIG91ciB0YWxlbnRlZCBjaGVmcyBjcmFmdCBcclxuICAgICAgICBtYXN0ZXJwaWVjZXMgdGhhdCB0YW50YWxpemUgdGhlIHRhc3RlIGJ1ZHMuIEZyb20gaW5ub3ZhdGl2ZSBmdXNpb24gY3JlYXRpb25zIHRvIHRpbWVsZXNzIGNsYXNzaWNzIFxyXG4gICAgICAgIHByZXBhcmVkIHdpdGggbWV0aWN1bG91cyBhdHRlbnRpb24gdG8gZGV0YWlsLCBldmVyeSBkaXNoIGlzIGEgd29yayBvZiBhcnQuYDtcclxuXHJcbiAgICBjb25zdCBwYXJhZ3JhcGhUaHJlZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3AnKTtcclxuICAgIHBhcmFncmFwaFRocmVlLmlubmVySFRNTCA9IGBTdGVwIGludG8gb3VyIGVsZWdhbnQgYW5kIGludml0aW5nIHNwYWNlLCB3aGVyZSB0aGUgYW1iaWFuY2UgZXh1ZGVzIHdhcm10aCBhbmQgc29waGlzdGljYXRpb24uIFxyXG4gICAgICAgIFRoZSBzb2Z0IGxpZ2h0aW5nLCB0YXN0ZWZ1bCBkZWNvciwgYW5kIGNvbWZvcnRhYmxlIHNlYXRpbmcgc2V0IHRoZSBzdGFnZSBmb3IgYSBtZW1vcmFibGUgZXZlbmluZyBvZiBcclxuICAgICAgICBpbmR1bGdlbmNlLiBXaGV0aGVyIGl0J3MgYW4gaW50aW1hdGUgZGlubmVyIGZvciB0d28sIGEgZ2F0aGVyaW5nIHdpdGggZnJpZW5kcywgb3IgYSBjZWxlYnJhdG9yeSBcclxuICAgICAgICBldmVudCwgRXBpY3VyZWFuIEVzY2FwZSBwcm92aWRlcyB0aGUgcGVyZmVjdCBzZXR0aW5nIGZvciBhbnkgb2NjYXNpb24uYDtcclxuXHJcbiAgICBjb25zdCBwYXJhZ3JhcGhGb3VyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgncCcpO1xyXG4gICAgcGFyYWdyYXBoRm91ci5pbm5lckhUTUwgPSBgQXQgRXBpY3VyZWFuIEVzY2FwZSwgd2Ugc291cmNlIG9ubHkgdGhlIGZpbmVzdCwgZnJlc2hlc3QgaW5ncmVkaWVudHMsIGVuc3VyaW5nIHRoYXQgZXZlcnkgYml0ZSBcclxuICAgICAgICBidXJzdHMgd2l0aCBmbGF2b3IuIE91ciBtZW51IHNob3djYXNlcyBhIGhhcm1vbmlvdXMgYmxlbmQgb2YgZ2xvYmFsIGN1aXNpbmVzLCBjb21iaW5pbmcgdHJhZGl0aW9uYWwgXHJcbiAgICAgICAgdGVjaG5pcXVlcyB3aXRoIG1vZGVybiBmbGFpci4gRnJvbSBzdWNjdWxlbnQgc2VhZm9vZCB0byBzaXp6bGluZyBzdGVha3MsIHZlZ2V0YXJpYW4gZGVsaWdodHMgdG8gXHJcbiAgICAgICAgZGVjYWRlbnQgZGVzc2VydHMsIG91ciBkaXZlcnNlIHNlbGVjdGlvbiBjYXRlcnMgdG8gZXZlcnkgcGFsYXRlIGFuZCBkaWV0YXJ5IHByZWZlcmVuY2UuYDtcclxuXHJcbiAgICBjb25zdCBwYXJhZ3JhcGhGaXZlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgncCcpO1xyXG4gICAgcGFyYWdyYXBoRml2ZS5pbm5lckhUTUwgPSBgV2hldGhlciB5b3UncmUgYSBzZWFzb25lZCBmb29kIGFmaWNpb25hZG8gb3IgYW4gYWR2ZW50dXJvdXMgZXBpY3VyZWFuLCBFcGljdXJlYW4gRXNjYXBlIHByb21pc2VzIGFuIFxyXG4gICAgICAgIHVuZm9yZ2V0dGFibGUgY3VsaW5hcnkgam91cm5leS4gSm9pbiB1cyBhbmQgc3VycmVuZGVyIHRvIHRoZSBhbGx1cmUgb2YgZXhxdWlzaXRlIGZsYXZvcnMsIFxyXG4gICAgICAgIGltcGVjY2FibGUgaG9zcGl0YWxpdHksIGFuZCBhIGRpbmluZyBleHBlcmllbmNlIHRoYXQgdHJhbnNjZW5kcyB0aGUgb3JkaW5hcnkuYDtcclxuXHJcbiAgICBjb25zdCBib29raW5nID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaDQnKTtcclxuICAgIGJvb2tpbmcuaW5uZXJIVE1MID0gYEluZHVsZ2UgeW91ciBzZW5zZXMgYW5kIGVzY2FwZSB0byBhIHdvcmxkIG9mIGdhc3Ryb25vbWljIGJsaXNzLiBCb29rIHlvdXIgdGFibGUgYXQgRXBpY3VyZWFuIFxyXG4gICAgICAgIEVzY2FwZSB0b2RheSBhbmQgZW1iYXJrIG9uIGEgY3VsaW5hcnkgYWR2ZW50dXJlIGxpa2Ugbm8gb3RoZXIuYDtcclxuXHJcbiAgICBjb250ZW50LmFwcGVuZENoaWxkKG5hbWUpO1xyXG4gICAgY29udGVudC5hcHBlbmRDaGlsZChoZWFkbGluZSk7XHJcbiAgICBjb250ZW50LmFwcGVuZENoaWxkKHBhcmFncmFwaE9uZSk7XHJcbiAgICBjb250ZW50LmFwcGVuZENoaWxkKHBhcmFncmFwaFR3byk7XHJcbiAgICBjb250ZW50LmFwcGVuZENoaWxkKHBhcmFncmFwaFRocmVlKTtcclxuICAgIGNvbnRlbnQuYXBwZW5kQ2hpbGQocGFyYWdyYXBoRm91cik7XHJcbiAgICBjb250ZW50LmFwcGVuZENoaWxkKHBhcmFncmFwaEZpdmUpO1xyXG4gICAgY29udGVudC5hcHBlbmRDaGlsZChib29raW5nKTtcclxuXHJcbiAgICByZXR1cm4gY29udGVudDtcclxufVxyXG5cclxuZXhwb3J0IHsgZGlzcGxheSB9IiwiZnVuY3Rpb24gZGlzcGxheSgpIHtcclxuICAgIGNvbnN0IGNvbnRlbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKVxyXG4gICAgY29udGVudC5pZCA9ICdjb250ZW50JztcclxuXHJcblxyXG5cclxuICAgIHJldHVybiBjb250ZW50O1xyXG59XHJcblxyXG5leHBvcnQgeyBkaXNwbGF5IH0iXSwibmFtZXMiOlsiX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzBfX18iLCJVUkwiLCJfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMV9fXyIsIl9fX0NTU19MT0FERVJfRVhQT1JUX19fIiwiX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMF9fXyIsIl9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzFfX18iLCJwdXNoIiwibW9kdWxlIiwiaWQiLCJleHBvcnRzIiwiY3NzV2l0aE1hcHBpbmdUb1N0cmluZyIsImxpc3QiLCJ0b1N0cmluZyIsInRoaXMiLCJtYXAiLCJpdGVtIiwiY29udGVudCIsIm5lZWRMYXllciIsImNvbmNhdCIsImxlbmd0aCIsImpvaW4iLCJpIiwibW9kdWxlcyIsIm1lZGlhIiwiZGVkdXBlIiwic3VwcG9ydHMiLCJsYXllciIsInVuZGVmaW5lZCIsImFscmVhZHlJbXBvcnRlZE1vZHVsZXMiLCJrIiwiX2siLCJ1cmwiLCJvcHRpb25zIiwiU3RyaW5nIiwiX19lc01vZHVsZSIsImRlZmF1bHQiLCJ0ZXN0Iiwic2xpY2UiLCJoYXNoIiwibmVlZFF1b3RlcyIsInJlcGxhY2UiLCJjc3NNYXBwaW5nIiwiYnRvYSIsImJhc2U2NCIsInVuZXNjYXBlIiwiZW5jb2RlVVJJQ29tcG9uZW50IiwiSlNPTiIsInN0cmluZ2lmeSIsImRhdGEiLCJzb3VyY2VNYXBwaW5nIiwic3R5bGVzSW5ET00iLCJnZXRJbmRleEJ5SWRlbnRpZmllciIsImlkZW50aWZpZXIiLCJyZXN1bHQiLCJtb2R1bGVzVG9Eb20iLCJpZENvdW50TWFwIiwiaWRlbnRpZmllcnMiLCJiYXNlIiwiY291bnQiLCJpbmRleEJ5SWRlbnRpZmllciIsIm9iaiIsImNzcyIsInNvdXJjZU1hcCIsInJlZmVyZW5jZXMiLCJ1cGRhdGVyIiwiYWRkRWxlbWVudFN0eWxlIiwiYnlJbmRleCIsInNwbGljZSIsImFwaSIsImRvbUFQSSIsInVwZGF0ZSIsIm5ld09iaiIsInJlbW92ZSIsImxhc3RJZGVudGlmaWVycyIsIm5ld0xpc3QiLCJpbmRleCIsIm5ld0xhc3RJZGVudGlmaWVycyIsIl9pIiwiX2luZGV4IiwibWVtbyIsImluc2VydCIsInN0eWxlIiwidGFyZ2V0Iiwic3R5bGVUYXJnZXQiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJ3aW5kb3ciLCJIVE1MSUZyYW1lRWxlbWVudCIsImNvbnRlbnREb2N1bWVudCIsImhlYWQiLCJlIiwiZ2V0VGFyZ2V0IiwiRXJyb3IiLCJhcHBlbmRDaGlsZCIsImVsZW1lbnQiLCJjcmVhdGVFbGVtZW50Iiwic2V0QXR0cmlidXRlcyIsImF0dHJpYnV0ZXMiLCJzdHlsZUVsZW1lbnQiLCJub25jZSIsInNldEF0dHJpYnV0ZSIsImluc2VydFN0eWxlRWxlbWVudCIsInN0eWxlVGFnVHJhbnNmb3JtIiwiYXBwbHkiLCJwYXJlbnROb2RlIiwicmVtb3ZlQ2hpbGQiLCJyZW1vdmVTdHlsZUVsZW1lbnQiLCJzdHlsZVNoZWV0IiwiY3NzVGV4dCIsImZpcnN0Q2hpbGQiLCJjcmVhdGVUZXh0Tm9kZSIsIl9fd2VicGFja19tb2R1bGVfY2FjaGVfXyIsIl9fd2VicGFja19yZXF1aXJlX18iLCJtb2R1bGVJZCIsImNhY2hlZE1vZHVsZSIsIl9fd2VicGFja19tb2R1bGVzX18iLCJtIiwibiIsImdldHRlciIsImQiLCJhIiwiZGVmaW5pdGlvbiIsImtleSIsIm8iLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImVudW1lcmFibGUiLCJnZXQiLCJnIiwiZ2xvYmFsVGhpcyIsIkZ1bmN0aW9uIiwicHJvcCIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwiY2FsbCIsInNjcmlwdFVybCIsImltcG9ydFNjcmlwdHMiLCJsb2NhdGlvbiIsImN1cnJlbnRTY3JpcHQiLCJzcmMiLCJzY3JpcHRzIiwiZ2V0RWxlbWVudHNCeVRhZ05hbWUiLCJwIiwiYiIsImJhc2VVUkkiLCJzZWxmIiwiaHJlZiIsIm5jIiwiRGlzaCIsIm5hbWUiLCJkZXNjcmlwdGlvbiIsInByaWNlIiwibG9jYWxzIiwiQXBwZXRpemVycyIsIk1haW5Db3Vyc2UiLCJEZXNlcnRzIiwiZGlzcGxheU5hdmlnYXRpb25CYXIiLCJib2R5IiwiaW5uZXJIVE1MIiwibmF2aWdhdGlvbkJhciIsImhvbWUiLCJ0ZXh0Q29udGVudCIsIm1lbnUiLCJjb250YWN0IiwiYWRkRXZlbnRMaXN0ZW5lciIsImxvYWRIb21lIiwibG9hZE1lbnUiLCJsb2FkQ29udGFjdCIsImNsYXNzTGlzdCIsImhlYWRsaW5lIiwicGFyYWdyYXBoT25lIiwicGFyYWdyYXBoVHdvIiwicGFyYWdyYXBoVGhyZWUiLCJwYXJhZ3JhcGhGb3VyIiwicGFyYWdyYXBoRml2ZSIsImJvb2tpbmciLCJkaXNwbGF5IiwiYXBwZXRpemVycyIsImFwcGV0aXplcnNIZWFkaW5nIiwiYXBwZXRpemVyIiwibGVmdCIsInJpZ2h0IiwiZGlzaCIsIm1haW5Db3Vyc2UiLCJtYWluQ291cnNlSGVhZGluZyIsIm1haW5jb3Vyc2UiLCJkZXNlcnRzIiwiZGVzZXJ0c0hlYWRpbmciLCJkZXNlcnQiXSwic291cmNlUm9vdCI6IiJ9